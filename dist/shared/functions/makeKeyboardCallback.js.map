{"version":3,"sources":["../../../src/shared/functions/makeKeyboardCallback.js"],"names":["SPACE_BAR","ENTER_KEY","makeKeyboardCallback","callbackProp","overrideValue","allowedKeys","event","includes","keyCode","callback","undefined"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,SAAS,GAAG,EAAlB;AACA,IAAMC,SAAS,GAAG,EAAlB;;AASA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,YAAD,EAAeC,aAAf;AAAA,MAA8BC,WAA9B,uEAA4C,CAACL,SAAD,EAAYC,SAAZ,CAA5C;AAAA,SAAuE,UAACK,KAAD,EAAW;AAC7G,QAAID,WAAW,CAACE,QAAZ,CAAqBD,KAAK,CAACE,OAA3B,CAAJ,EAAyC;AACvC,UAAMC,QAAQ,GAAG,8BAAaN,YAAb,EAA2BC,aAA3B,CAAjB;AACAK,MAAAA,QAAQ,CAACH,KAAD,CAAR;AACD;;AAED,WAAOI,SAAP;AACD,GAP4B;AAAA,CAA7B;;eASeR,oB","sourcesContent":["import makeCallback from './makeCallback';\n\nconst SPACE_BAR = 32;\nconst ENTER_KEY = 13;\n\n/**\n * This function takes a callbackProp, a possible overrideValue and an array of allowed key codes as parameters\n * and returns a function that, given a React SyntheticEvent, will perform the callbackProp passing the event as\n * first parameter and the possible overrideValue as second parameter only if the pressed key is one of the allowed\n * key codes.\n * The purpose of this function is to generate keyboard callbacks having a similar signatures.\n */\nconst makeKeyboardCallback = (callbackProp, overrideValue, allowedKeys = [SPACE_BAR, ENTER_KEY]) => (event) => {\n  if (allowedKeys.includes(event.keyCode)) {\n    const callback = makeCallback(callbackProp, overrideValue);\n    callback(event);\n  }\n\n  return undefined;\n};\n\nexport default makeKeyboardCallback;\n"],"file":"makeKeyboardCallback.js"}