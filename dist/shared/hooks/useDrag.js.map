{"version":3,"sources":["shared/hooks/useDrag.js"],"names":["defaultOptions","ref","undefined","throttleBy","getEventCoordinates","event","clientX","clientY","createCallbackRef","callback","current","useDrag","options","targetRef","dragStartHandlerRef","dragHandlerRef","dragEndHandlerRef","isDragging","start","end","offset","info","throttle","onDragStart","contains","target","onDrag","onDragEnd","_onDragStart","e","_onDrag","_onDragEnd","addEventListener","document","removeEventListener"],"mappings":"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","sourcesContent":["import throttleBy from 'lodash/fp/throttle';\nimport { useRef, useCallback, useEffect } from 'react';\n\nconst defaultOptions = {\n  /**\n   * A custom ref to be used in place of a new one\n   * @default undefined\n   */\n  ref: undefined,\n  /**\n   * Throttle the onDrag handler by the given ms\n   * @default 0ms\n   */\n  throttleBy: 0,\n};\n\n\n/**\n * Returns the click coordinates of a MouseEvent\n * @param event\n * @returns {*[]}\n */\nconst getEventCoordinates = (event) => [event.clientX, event.clientY];\n\n/**\n * Create a persistent callback reference that will live trough a component lifecycle\n * @param ref\n * @returns {Function}\n */\nconst createCallbackRef = (ref) => useCallback((callback) => {\n  if (!ref.current || callback !== ref.current) {\n    // eslint-disable-next-line no-param-reassign\n    ref.current = callback;\n  }\n}, [ref.current]);\n\n/**\n * A custom hook exposing handlers and ref for developing draggable React elements.\n *\n * ## Basic Usage:\n *\n * ```\n * const DraggableItem = () => {\n *    const { ref, isDragging, onDragStart, onDrag, onDragEnd } = useDrag();\n *\n *    onDragStart(dragStartHandler);\n *\n *    onDrag(dragHandler);\n *\n *    onDragEnd(dragEndHandler);\n *\n *    return (\n *      <div ref={ref}>\n *        Drag me!\n *      </div>\n *    );\n * }\n * ```\n *\n * ## Options:\n *\n * ```\n * const DraggingItem = () => {\n *    const ref = useRef();\n *    const options = { ref, throttleBy: 60 };\n *    const { isDragging, onDragStart, onDrag, onDragEnd } = useDrag(options);\n *\n *    onDragStart(dragStartHandler);\n *\n *    onDrag(dragHandler);\n *\n *    onDragEnd(dragEndHandler);\n *\n *    return (\n *      <div ref={ref}>\n *        Drag me!\n *      </div>\n *    );\n * }\n * ```\n */\nconst useDrag = (options = defaultOptions) => {\n  const targetRef = options.ref || useRef(); // the target draggable element\n  const dragStartHandlerRef = useRef(); // a ref to user's onDragStart handler\n  const dragHandlerRef = useRef(); // a ref to user's onDrag handler\n  const dragEndHandlerRef = useRef(); // a ref to user's onDragEnd handler\n  // the dragging state is created from a useRef rather than a useState to avoid rendering during the dragging process\n  const { current: info } = useRef({ isDragging: false, start: null, end: null, offset: null });\n  const throttle = throttleBy(options.throttleBy);\n\n  /**\n   * When the dragging starts, updates the state then perform the user's onDragStart handler if exists\n   */\n  const onDragStart = useCallback((event) => {\n    if (!info.isDragging && targetRef.current.contains(event.target)) {\n      info.isDragging = true;\n      info.end = null;\n      info.offset = null;\n      info.start = getEventCoordinates(event);\n\n      if (dragStartHandlerRef.current) {\n        dragStartHandlerRef.current(event, { ...info });\n      }\n    }\n  }, [targetRef.current, info, dragStartHandlerRef.current]);\n\n  /**\n   * Whilst dragging the element, updates the state then perform the user's onDrag handler if exists\n   */\n  const onDrag = useCallback(throttle((event) => {\n    if (info.isDragging) {\n      info.offset = [info.start[0] - event.clientX, info.start[1] - event.clientY];\n\n      if (dragHandlerRef.current) {\n        dragHandlerRef.current(event, { ...info });\n      }\n    }\n  }), [targetRef.current, info, dragHandlerRef.current]);\n\n  /**\n   * When the dragging ends, updates the state then perform the user's onDragEnd handler if exists\n   */\n  const onDragEnd = useCallback((event) => {\n    if (info.isDragging) {\n      info.isDragging = false;\n      info.end = getEventCoordinates(event);\n\n      if (dragEndHandlerRef.current) {\n        dragEndHandlerRef.current(event, { ...info });\n      }\n    }\n  }, [targetRef.current, info, dragEndHandlerRef.current]);\n\n  /**\n   * When the layout renders the target item, assign the dragging events\n   */\n  useEffect(() => {\n    /* eslint-disable no-underscore-dangle */\n    const _onDragStart = (e) => onDragStart(e);\n    const _onDrag = (e) => onDrag(e);\n    const _onDragEnd = (e) => onDragEnd(e);\n    /* eslint-enable no-underscore-dangle */\n\n    if (targetRef.current) {\n      targetRef.current.addEventListener('mousedown', _onDragStart);\n      document.addEventListener('mousemove', _onDrag);\n      document.addEventListener('mouseup', _onDragEnd);\n    }\n\n    return () => {\n      if (targetRef.current) {\n        targetRef.current.removeEventListener('mousedown', _onDragStart);\n        document.removeEventListener('mousemove', _onDrag);\n        document.removeEventListener('mouseup', _onDragEnd);\n      }\n    };\n  }, [targetRef.current]);\n\n  return {\n    ref: targetRef,\n    onDragStart: createCallbackRef(dragStartHandlerRef),\n    onDrag: createCallbackRef(dragHandlerRef),\n    onDragEnd: createCallbackRef(dragEndHandlerRef),\n  };\n};\n\n\nexport default useDrag;\n"],"file":"useDrag.js"}