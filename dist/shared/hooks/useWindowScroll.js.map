{"version":3,"sources":["shared/hooks/useWindowScroll.js"],"names":["useWindowScroll","scrollHandler","debouncedHandler","window","addEventListener","removeEventListener"],"mappings":";;;;;;;AAAA;;AACA;;;;AAMA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,aAAD,EAAmB;AACzC,MAAMC,gBAAgB,GAAG,wBAAY,0BAASD,aAAT,EAAwB,GAAxB,CAAZ,EAA0C,CAACA,aAAD,CAA1C,CAAzB;AAEA,wBAAU,YAAM;AACdE,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCF,gBAAlC;AAEA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCH,gBAArC;AACD,KAFD;AAGD,GAND,EAMG,CAACD,aAAD,CANH;AAOD,CAVD;;eAYeD,e","sourcesContent":["import { useEffect, useCallback } from 'react';\nimport debounce from 'lodash/debounce';\n\n/**\n * Accepts a scrollHandler callback to be fired on window scroll.\n * The scrollHandler will be debounced with a 150 milliseconds delay to avoid poor performances behavior.\n */\nconst useWindowScroll = (scrollHandler) => {\n  const debouncedHandler = useCallback(debounce(scrollHandler, 150), [scrollHandler]);\n\n  useEffect(() => {\n    window.addEventListener('scroll', debouncedHandler);\n\n    return () => {\n      window.removeEventListener('scroll', debouncedHandler);\n    };\n  }, [scrollHandler]);\n};\n\nexport default useWindowScroll;\n"],"file":"useWindowScroll.js"}