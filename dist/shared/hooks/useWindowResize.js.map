{"version":3,"sources":["../../../src/shared/hooks/useWindowResize.js"],"names":["useWindowResize","resizeHandler","debouncedHandler","window","addEventListener","removeEventListener"],"mappings":";;;;;;;AAAA;;AACA;;;;AAOA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,aAAD,EAAmB;AACzC,wBAAU,YAAM;AACd,QAAMC,gBAAgB,GAAG,0BAASD,aAAT,EAAwB,GAAxB,CAAzB;AAEAE,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCF,gBAAlC;AAEA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCH,gBAArC;AACD,KAFD;AAGD,GARD;AASD,CAVD;;eAYeF,e","sourcesContent":["import { useEffect } from 'react';\nimport debounce from 'lodash/debounce';\n\n/**\n * Accepts a function, called resizeHandler, to be fired when the window size changes.\n * The resizeHandler will be debounced with a 150 milliseconds delay to improve performances.\n * @param resizeHandler\n */\nconst useWindowResize = (resizeHandler) => {\n  useEffect(() => {\n    const debouncedHandler = debounce(resizeHandler, 150);\n\n    window.addEventListener('resize', debouncedHandler);\n\n    return () => {\n      window.removeEventListener('resize', debouncedHandler);\n    };\n  });\n};\n\nexport default useWindowResize;\n"],"file":"useWindowResize.js"}