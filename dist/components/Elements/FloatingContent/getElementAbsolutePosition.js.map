{"version":3,"sources":["components/Elements/FloatingContent/getElementAbsolutePosition.js"],"names":["getCenterPosition","coordinates","bodyWidth","x","width","getRightPosition","getLeftPosition","getTopPosition","bodyHeight","coord","scrollY","offset","top","getBottomPosition","height","getElementAbsolutePosition","element","placement","setWidth","document","body","clientHeight","clientWidth","bottom","right","left","transform","window","boundingClientRect","children","length","getBoundingClientRect"],"mappings":"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","sourcesContent":["const getCenterPosition = (coordinates, bodyWidth) => bodyWidth - coordinates.x - (coordinates.width / 2);\n\nconst getRightPosition = (coordinates, bodyWidth) => bodyWidth - coordinates.x - coordinates.width;\n\nconst getLeftPosition = (coordinates) => coordinates.x;\n\nconst getTopPosition = (bodyHeight, coord, scrollY, offset) => bodyHeight - coord.top - scrollY + offset;\n\nconst getBottomPosition = (bodyHeight, coord, scrollY, offset) => (\n  bodyHeight - coord.height - coord.top - scrollY - offset);\n\n/**\n * Returns the absolute position of a given HTML element to the document.\n */\nconst getElementAbsolutePosition = (element, placement = 'top-center', offset = 0, setWidth = false) => {\n  const { clientHeight, clientWidth } = document.body;\n  let bottom;\n  let right;\n  let left;\n  let transform;\n  const { scrollY } = window;\n\n  /**\n   * As we assume the span is wrapping a React component, we try to get its bounding client rect by accessing the span's\n   * children from the `element.children` property, if it is not available or is empty we then use the span itself to\n   * get the bounding client rect.\n   */\n  const boundingClientRect = element.children.length !== 0\n    ? element.children[0].getBoundingClientRect()\n    : element.getBoundingClientRect();\n\n  switch (placement) {\n    case 'top-left':\n      bottom = getTopPosition(clientHeight, boundingClientRect, scrollY, offset);\n      left = getLeftPosition(boundingClientRect);\n      break;\n    case 'top-center':\n    default:\n      bottom = getTopPosition(clientHeight, boundingClientRect, scrollY, offset);\n      right = getCenterPosition(boundingClientRect, clientWidth);\n      transform = 'translateX(50%)';\n      break;\n    case 'top-right':\n      bottom = getTopPosition(clientHeight, boundingClientRect, scrollY, offset);\n      right = getRightPosition(boundingClientRect, clientWidth);\n      transform = 'translate(0%,0%)';\n      break;\n    case 'bottom-left':\n      bottom = getBottomPosition(clientHeight, boundingClientRect, scrollY, offset);\n      left = getLeftPosition(boundingClientRect);\n      transform = 'translateY(100%)';\n      break;\n    case 'bottom-center':\n      bottom = getBottomPosition(clientHeight, boundingClientRect, scrollY, offset);\n      right = getCenterPosition(boundingClientRect, clientWidth);\n      transform = 'translate(50%,100%)';\n      break;\n    case 'bottom-right':\n      bottom = getBottomPosition(clientHeight, boundingClientRect, scrollY, offset);\n      right = getRightPosition(boundingClientRect, clientWidth);\n      transform = 'translateY(100%)';\n      break;\n    case 'left-center':\n      right = getRightPosition(boundingClientRect, clientWidth) + boundingClientRect.width + offset;\n      // Disabling to avoid using more than one line for a mathematical operation\n      // eslint-disable-next-line max-len\n      bottom = getTopPosition(clientHeight, boundingClientRect, scrollY, offset) - offset - (boundingClientRect.height / 2);\n      transform = 'translateY(50%)';\n      break;\n    case 'right-center':\n      left = getLeftPosition(boundingClientRect) + boundingClientRect.width + offset;\n      // Disabling to avoid using more than one line for a mathematical operation\n      // eslint-disable-next-line max-len\n      bottom = getTopPosition(clientHeight, boundingClientRect, scrollY, offset) - offset - (boundingClientRect.height / 2);\n      transform = 'translateY(50%)';\n      break;\n  }\n\n  return ({ bottom, right, left, transform, ...setWidth && { width: boundingClientRect.width } });\n};\n\nexport default getElementAbsolutePosition;\n"],"file":"getElementAbsolutePosition.js"}