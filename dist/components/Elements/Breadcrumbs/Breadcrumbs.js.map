{"version":3,"sources":["../../../../src/components/Elements/Breadcrumbs/Breadcrumbs.js"],"names":["Breadcrumbs","props","items","color","maxDisplayedItems","className","rest","classList","length","map","item","render","path","label","icon","propTypes","PropTypes","arrayOf","shape","string","IconProp","func","isRequired","Color","number","defaultProps","React","memo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAQA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA,MACrBC,KADqB,GACmCD,KADnC,CACrBC,KADqB;AAAA,MACdC,KADc,GACmCF,KADnC,CACdE,KADc;AAAA,MACPC,iBADO,GACmCH,KADnC,CACPG,iBADO;AAAA,MACYC,SADZ,GACmCJ,KADnC,CACYI,SADZ;AAAA,MAC0BC,IAD1B,4BACmCL,KADnC;;AAE7B,MAAMM,SAAS,GAAG,oEAA4CJ,KAA5C,GAAqDE,SAArD,CAAlB;;AAIA,MAAID,iBAAiB,GAAGF,KAAK,CAACM,MAA9B,EAAsC;AACpC,sBAAK,0EAAL;AACA,WAAO,IAAP;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAED;AAAhB,KAA+BD,IAA/B,GACE,4CACG,OAAQF,iBAAR,KAA+B,QAA/B,IAA2CA,iBAAiB,GAAG,CAA/D,GACG,gCAAC,0BAAD;AAAgB,IAAA,KAAK,EAAEF,KAAvB;AAA8B,IAAA,iBAAiB,EAAEE;AAAjD,IADH,GAEIF,KAAK,CAACO,GAAN,CAAU,UAACC,IAAD;AAAA,WACXA,IAAI,CAACC,MAAL,GACID,IAAI,CAACC,MAAL,CAAYD,IAAZ,CADJ,GAEI,gCAAC,0BAAD;AAAgB,MAAA,IAAI,EAAEA,IAAI,CAACE,IAA3B;AAAiC,MAAA,KAAK,EAAEF,IAAI,CAACG,KAA7C;AAAoD,MAAA,IAAI,EAAEH,IAAI,CAACI,IAA/D;AAAqE,MAAA,GAAG,EAAEJ,IAAI,CAACE,IAAL,IAAaF,IAAI,CAACG;AAA5F,MAHO;AAAA,GAAV,CAHP,CADF,CADF;AAaD,CAxBD;;AA0BAb,WAAW,CAACe,SAAZ,GAAwB;AAKtBb,EAAAA,KAAK,EAAEc,sBAAUC,OAAV,CAAkBD,sBAAUE,KAAV,CAAgB;AACvCN,IAAAA,IAAI,EAAEI,sBAAUG,MADuB;AAEvCN,IAAAA,KAAK,EAAEG,sBAAUG,MAFsB;AAGvCL,IAAAA,IAAI,EAAEM,gBAHiC;AAIvCT,IAAAA,MAAM,EAAEK,sBAAUK;AAJqB,GAAhB,CAAlB,EAKHC,UAVkB;AAgBtBnB,EAAAA,KAAK,EAAEoB,aAhBe;AAoBtBnB,EAAAA,iBAAiB,EAAEY,sBAAUQ;AApBP,CAAxB;AAuBAxB,WAAW,CAACyB,YAAZ,GAA2B;AACzBtB,EAAAA,KAAK,EAAE,SADkB;AAEzBC,EAAAA,iBAAiB,EAAE;AAFM,CAA3B;;eAKesB,kBAAMC,IAAN,CAAW3B,WAAX,C","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { Color, IconProp, warn } from '../../../shared';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport BreadcrumbMenu from './BreadcrumbMenu';\n\nimport './breadcrumbs.scss';\n\n/**\n * Breadcrumbs component is used to show a page hierarchy.\n * Defining clickable paths helps the user navigating your app.\n */\nconst Breadcrumbs = (props) => {\n  const { items, color, maxDisplayedItems, className, ...rest } = props;\n  const classList = classNames(`bi bi-breadcrumbs breadcrumbs-${color}`, className);\n\n\n  // Returns a warn massage if the number of displayed items is bigger than items itselves.\n  if (maxDisplayedItems > items.length) {\n    warn('It is no possible to show an items number bigger than the items provided');\n    return null;\n  }\n\n  return (\n    <nav className={classList} {...rest}>\n      <ol>\n        {typeof (maxDisplayedItems) === 'number' && maxDisplayedItems > 0\n          ? <BreadcrumbMenu items={items} maxDisplayedItems={maxDisplayedItems} />\n          : (items.map((item) => (\n            item.render\n              ? item.render(item)\n              : <BreadcrumbItem path={item.path} label={item.label} icon={item.icon} key={item.path || item.label} />\n          )))}\n      </ol>\n    </nav>\n  );\n};\n\nBreadcrumbs.propTypes = {\n  /**\n   * Defines the items type, it must be an array of object, with label required.\n   * The breadcrumb component accept an array of values, in order to show the path of pages.\n   */\n  items: PropTypes.arrayOf(PropTypes.shape({\n    path: PropTypes.string,\n    label: PropTypes.string,\n    icon: IconProp,\n    render: PropTypes.func,\n  })).isRequired,\n  /**\n   * Defines the link color of breadcrumbs, can be: `default`, `primary`, `secondary`, `info`, `warning`, `success`,\n   * `danger`.\n   * @default primary\n   */\n  color: Color,\n  /*\n  * Defines how many items should be displayed in the breadcrumbs.\n  */\n  maxDisplayedItems: PropTypes.number,\n};\n\nBreadcrumbs.defaultProps = {\n  color: 'primary',\n  maxDisplayedItems: 0,\n};\n\nexport default React.memo(Breadcrumbs);\n"],"file":"Breadcrumbs.js"}