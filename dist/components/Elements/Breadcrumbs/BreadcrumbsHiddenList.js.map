{"version":3,"sources":["../../../../src/components/Elements/Breadcrumbs/BreadcrumbsHiddenList.js"],"names":["BreadcrumbsHiddenList","props","hiddenItems","isShown","setIsShown","map","item","paddingLeft","paddingRight","path","icon","label","propTypes","PropTypes","arrayOf","shape","string","IconProp","render","func","isRequired"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;AAMA,IAAMA,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,KAAD,EAAW;AAAA,MAC/BC,WAD+B,GACfD,KADe,CAC/BC,WAD+B;;AAAA,kBAET,qBAAS,KAAT,CAFS;AAAA;AAAA,MAEhCC,OAFgC;AAAA,MAEvBC,UAFuB;;AAIvC,SACE;AAAI,IAAA,SAAS,EAAC;AAAd,KACE,gCAAC,2BAAD;AACE,IAAA,QAAQ,EAAE;AAAA,aAAMA,UAAU,CAAC,CAACD,OAAF,CAAhB;AAAA,KADZ;AAEE,IAAA,OAAO,EAAEA,OAFX;AAGE,IAAA,SAAS,EAAC,aAHZ;AAIE,IAAA,SAAS,EAAC;AAJZ,KAKMF,KALN,GAOE,gCAAC,gBAAD;AAAM,IAAA,SAAS;AAAf,KACGC,WAAW,CAACG,GAAZ,CAAgB,UAACC,IAAD;AAAA,WACf,gCAAC,gBAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEC,QAAAA,WAAW,EAAE,QAAf;AAAyBC,QAAAA,YAAY,EAAE;AAAvC;AAAlB,OACG,CAAC,CAACF,IAAI,CAACG,IAAP,IACC;AAAG,MAAA,IAAI,EAAEH,IAAI,CAACG;AAAd,OACG,CAAC,CAACH,IAAI,CAACI,IAAP,IAAe,8BAAiBJ,IAAI,CAACI,IAAtB,CADlB,EAEGJ,IAAI,CAACK,KAFR,CAFJ,EAOG,CAACL,IAAI,CAACG,IAAN,IACC,kEACG,CAAC,CAACH,IAAI,CAACI,IAAP,IAAe,8BAAiBJ,IAAI,CAACI,IAAtB,CADlB,EAEGJ,IAAI,CAACK,KAFR,CARJ,CADe;AAAA,GAAhB,CADH,CAPF,CADF,CADF;AA8BD,CAlCD;;AAqCAX,qBAAqB,CAACY,SAAtB,GAAkC;AAKhCV,EAAAA,WAAW,EAAEW,sBAAUC,OAAV,CAAkBD,sBAAUE,KAAV,CAAgB;AAC7CN,IAAAA,IAAI,EAAEI,sBAAUG,MAD6B;AAE7CL,IAAAA,KAAK,EAAEE,sBAAUG,MAF4B;AAG7CN,IAAAA,IAAI,EAAEO,gBAHuC;AAI7CC,IAAAA,MAAM,EAAEL,sBAAUM;AAJ2B,GAAhB,CAAlB,EAKTC;AAV4B,CAAlC;eAcepB,qB","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport FloatingContent from '../FloatingContent';\nimport List from '../List';\nimport { IconProp, makeIconFromProp } from '../../../shared';\n\n/**\n * BreadcrumbHiddenItems is a sub-component of Breadcrumbs.\n * It handle the business-logic of the hidden breadcrumbs list.\n */\nconst BreadcrumbsHiddenList = (props) => {\n  const { hiddenItems } = props;\n  const [isShown, setIsShown] = useState(false);\n\n  return (\n    <li className=\"bi breadcrumb-item breadcrumb-item-button\">\n      <FloatingContent\n        onToggle={() => setIsShown(!isShown)}\n        isShown={isShown}\n        placement=\"bottom-left\"\n        className=\"bi-anim-fade-in\"\n        {...props}\n      >\n        <List condensed>\n          {hiddenItems.map((item) => (\n            <List.Item style={{ paddingLeft: '.25rem', paddingRight: '1rem' }}>\n              {!!item.path && (\n                <a href={item.path}>\n                  {!!item.icon && makeIconFromProp(item.icon)}\n                  {item.label}\n                </a>\n              )}\n              {!item.path && (\n                <>\n                  {!!item.icon && makeIconFromProp(item.icon)}\n                  {item.label}\n                </>\n              )}\n            </List.Item>\n          ))}\n        </List>\n      </FloatingContent>\n    </li>\n  );\n};\n\n\nBreadcrumbsHiddenList.propTypes = {\n  /**\n   * Defines the items type, it must be an array of object, with label required.\n   * The breadcrumb component accept an array of values, in order to show the path of pages.\n   */\n  hiddenItems: PropTypes.arrayOf(PropTypes.shape({\n    path: PropTypes.string,\n    label: PropTypes.string,\n    icon: IconProp,\n    render: PropTypes.func,\n  })).isRequired,\n};\n\n\nexport default BreadcrumbsHiddenList;\n"],"file":"BreadcrumbsHiddenList.js"}