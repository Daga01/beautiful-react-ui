{"version":3,"sources":["../../../../src/components/Elements/Modal/Modal.js"],"names":["wipeOutIncorrectChildren","child","type","ModalTitle","ModalBody","ModalFooter","Modal","React","memo","props","children","className","isOpen","centered","size","animation","onBackdropClick","backdropRender","onShow","rest","classList","Children","map","propTypes","PropTypes","bool","isRequired","func","string","oneOf","defaultProps","undefined","Title","Body","Footer"],"mappings":"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","sourcesContent":["import React, { Children, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Portal from '../_Portal';\nimport ModalTitle from './ModalTitle';\nimport ModalBody from './ModalBody';\nimport ModalFooter from './ModalFooter';\nimport { makeCallback, warn } from '../../../shared';\n\nimport './modal.scss';\n\n// this function wipes out the wrong children and warns about it.\nconst wipeOutIncorrectChildren = (child) => {\n  if (child.type !== ModalTitle && child.type !== ModalBody && child.type !== ModalFooter) {\n    warn('Modal allows Modal.Title, Modal.Body or Modal.Footer children only, other elements types are wiped out');\n    return null;\n  }\n  return child;\n};\n\n/**\n * A Modal component shows its children contents positioned over everything else in the document.\n */\n// the React.memo has been used here rather than on the export line (like other cases) to avoid wrapping the shortcut.\nconst Modal = React.memo((props) => {\n  const {\n    children, className, isOpen, centered, size, animation, onBackdropClick, backdropRender, onShow, ...rest\n  } = props;\n\n  // this effect is used to run onShow prop only when modal shows up\n  useEffect(() => {\n    if (onShow && isOpen === true) {\n      onShow();\n    }\n  }, [isOpen]);\n\n  const classList = classNames('bi bi-modal', {\n    'modal-sm': size === 'small',\n    'modal-lg': size === 'large',\n    'bi-anim-fade-in': animation === 'fade',\n    'bi-anim-zoom-in': animation === 'zoom',\n    'bi-anim-slide-right': animation === 'slideRight',\n    'bi-anim-slide-left': animation === 'slideLeft',\n    'bi-anim-slide-bottom': animation === 'slideBottom',\n    'bi-anim-slide-top': animation === 'slideTop',\n  }, className);\n\n  return (\n    <Portal id=\"bi-modals\">\n      {isOpen && (\n        <div className={classNames('bi-modal-wrapper', { 'center-modals': centered })}>\n          {!backdropRender && (\n            <div role=\"presentation\" onClick={makeCallback(onBackdropClick)} className=\"bi-backdrop\" />\n          )}\n          {backdropRender && backdropRender(props)}\n          <div className={classList} {...rest}>\n            {Children.map(children, wipeOutIncorrectChildren)}\n          </div>\n        </div>\n      )}\n    </Portal>\n  );\n});\n\nModal.propTypes = {\n  /**\n   * This prop defines whether the modal is shown or not.\n   */\n  isOpen: PropTypes.bool.isRequired,\n  /**\n   * onShow will be performed when each time the modal will be open\n   */\n  onShow: PropTypes.func,\n  /**\n   * Centered prop center the modal to place it in the middle of the screen viewport.\n   */\n  centered: PropTypes.bool,\n  /**\n   * It defines the modal's dimension\n   */\n  size: PropTypes.string,\n  /**\n   * It defines what kind of animation should be performed\n   */\n  animation: PropTypes.oneOf(['none', 'fade', 'zoom', 'slideRight', 'slideLeft', 'slideBottom', 'slideTop']),\n  /**\n   * If defined, this function will be run when clicking on backdrop\n   */\n  onBackdropClick: PropTypes.func,\n  /**\n   * this prop will replace the normal behavior of modal component\n   */\n  backdropRender: PropTypes.func,\n};\n\nModal.defaultProps = {\n  onShow: undefined,\n  centered: false,\n  size: 'default',\n  animation: 'zoom',\n  backdropRender: undefined,\n  onBackdropClick: undefined,\n};\n\nModal.Title = ModalTitle;\nModal.Body = ModalBody;\nModal.Footer = ModalFooter;\n\nexport default Modal;\n"],"file":"Modal.js"}