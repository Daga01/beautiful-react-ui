{"version":3,"sources":["../../../../src/components/Elements/Pill/Pill.js"],"names":["Pill","props","className","children","color","href","render","rounded","rest","El","classList","propTypes","Color","PropTypes","string","func","node","defaultProps","undefined","React","memo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;AAOA,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAAA,MACdC,SADc,GACiDD,KADjD,CACdC,SADc;AAAA,MACHC,QADG,GACiDF,KADjD,CACHE,QADG;AAAA,MACOC,KADP,GACiDH,KADjD,CACOG,KADP;AAAA,MACcC,IADd,GACiDJ,KADjD,CACcI,IADd;AAAA,MACoBC,MADpB,GACiDL,KADjD,CACoBK,MADpB;AAAA,MAC4BC,OAD5B,GACiDN,KADjD,CAC4BM,OAD5B;AAAA,MACwCC,IADxC,4BACiDP,KADjD;;AAEtB,MAAMQ,EAAE,GAAGJ,IAAI,GAAG,GAAH,GAAS,MAAxB;AAEA,MAAMK,SAAS,GAAG,4BAAW,YAAX,iBAAiCN,KAAjC,GAA0C;AAC1D,oBAAgBG,OAD0C;AAE1D,qBAAiBF;AAFyC,GAA1C,EAGfH,SAHe,CAAlB;AAKA,SACE,gCAAC,EAAD;AAAI,IAAA,SAAS,EAAEQ,SAAf;AAA0B,IAAA,IAAI,EAAEL;AAAhC,KAA0CG,IAA1C,GACG,CAACF,MAAD,IAAWH,QADd,EAEGG,MAAM,IAAIA,MAAM,CAACL,KAAD,CAFnB,CADF;AAMD,CAfD;;AAiBAD,IAAI,CAACW,SAAL,GAAiB;AAKfP,EAAAA,KAAK,EAAEQ,aALQ;AASfP,EAAAA,IAAI,EAAEQ,sBAAUC,MATD;AAafR,EAAAA,MAAM,EAAEO,sBAAUE,IAbH;AAiBfR,EAAAA,OAAO,EAAEM,sBAAUC,MAjBJ;AAqBfX,EAAAA,QAAQ,EAAEU,sBAAUG;AArBL,CAAjB;AAyBAhB,IAAI,CAACiB,YAAL,GAAoB;AAClBd,EAAAA,QAAQ,EAAE,IADQ;AAElBC,EAAAA,KAAK,EAAE,SAFW;AAGlBC,EAAAA,IAAI,EAAEa,SAHY;AAIlBZ,EAAAA,MAAM,EAAEY,SAJU;AAKlBX,EAAAA,OAAO,EAAE;AALS,CAApB;;eASeY,kBAAMC,IAAN,CAAWpB,IAAX,C","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { Color } from '../../../shared';\n\nimport './pill.scss';\n\n/**\n * A tiny component for labeling and small counting/notifications\n */\nconst Pill = (props) => {\n  const { className, children, color, href, render, rounded, ...rest } = props;\n  const El = href ? 'a' : 'span';\n\n  const classList = classNames('bi bi-pill', `pill-${color}`, {\n    'pill-rounded': rounded,\n    'linkable-pill': href,\n  }, className);\n\n  return (\n    <El className={classList} href={href} {...rest}>\n      {!render && children}\n      {render && render(props)}\n    </El>\n  );\n};\n\nPill.propTypes = {\n  /**\n   * Defines the pill's color, can be `default`, `primary`, `secondary`,\n   * `info`, `warning`, `success`, `danger`.\n   */\n  color: Color,\n  /**\n   * Pills can also accept links, the resulting tag is changed from <span> to <a> if href is present.\n   */\n  href: PropTypes.string,\n  /**\n   * Accepts a function/component and renders the returning value within the Pill component\n   */\n  render: PropTypes.func,\n  /**\n   * rounded indicated the pill shape, by default the shape is rounded\n   */\n  rounded: PropTypes.string,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n};\n\n\nPill.defaultProps = {\n  children: null,\n  color: 'default',\n  href: undefined,\n  render: undefined,\n  rounded: 'pill-rounded',\n};\n\n\nexport default React.memo(Pill);\n"],"file":"Pill.js"}