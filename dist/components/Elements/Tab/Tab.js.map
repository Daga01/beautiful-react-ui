{"version":3,"sources":["components/Elements/Tab/Tab.js"],"names":["filterTabChildren","child","index","props","type","TabContent","result","Object","create","React","cloneElement","active","title","icon","disabled","Tab","memo","children","onChange","color","orientation","className","rest","tabContents","Children","toArray","map","classList","propTypes","Color","PropTypes","func","isRequired","oneOfType","number","string","node","defaultProps","undefined","Content"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;AAOA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf,EAAyB;AACjD,MAAIF,KAAK,CAACG,IAAN,KAAeC,sBAAnB,EAA+B;AAC7B,sBAAK,gFAAL;AACA,WAAO,IAAP;AACD;;AAED,MAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAf;AAEAF,EAAAA,MAAM,CAACL,KAAP,GAAeQ,kBAAMC,YAAN,CAAmBT,KAAnB,EAA0B;AAAEU,IAAAA,MAAM,EAAER,KAAK,CAACQ,MAAN,KAAiBT;AAA3B,GAA1B,CAAf;AACAI,EAAAA,MAAM,CAACM,KAAP,GAAeX,KAAK,CAACE,KAAN,CAAYS,KAA3B;AACAN,EAAAA,MAAM,CAACO,IAAP,GAAcZ,KAAK,CAACE,KAAN,CAAYU,IAA1B;AACAP,EAAAA,MAAM,CAACQ,QAAP,GAAkBb,KAAK,CAACE,KAAN,CAAYW,QAA9B;AAEA,SAAOR,MAAP;AACD,CAdD;;AAqBA,IAAMS,GAAG,GAAGN,kBAAMO,IAAN,CAAW,UAACb,KAAD,EAAW;AAAA,MACxBc,QADwB,GAC+Cd,KAD/C,CACxBc,QADwB;AAAA,MACdN,MADc,GAC+CR,KAD/C,CACdQ,MADc;AAAA,MACNO,QADM,GAC+Cf,KAD/C,CACNe,QADM;AAAA,MACIC,KADJ,GAC+ChB,KAD/C,CACIgB,KADJ;AAAA,MACWC,WADX,GAC+CjB,KAD/C,CACWiB,WADX;AAAA,MACwBC,SADxB,GAC+ClB,KAD/C,CACwBkB,SADxB;AAAA,MACsCC,IADtC,4BAC+CnB,KAD/C;;AAEhC,MAAMoB,WAAW,GAAGC,gBAASC,OAAT,CAAiBR,QAAjB,EAA2BS,GAA3B,CAA+B,UAACzB,KAAD,EAAQC,KAAR;AAAA,WAAkBF,iBAAiB,CAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf,CAAnC;AAAA,GAA/B,CAApB;;AACA,MAAMwB,SAAS,GAAG,0DAAkCR,KAAlC,GAA2C;AAC3D,uBAAmBC,WAAW,KAAK;AADwB,GAA3C,EAEfC,SAFe,CAAlB;AAIA,SACE;AAAK,IAAA,SAAS,EAAEM;AAAhB,KAA+BL,IAA/B,GACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,4CACGC,WAAW,CAACG,GAAZ,CAAgB,gBAA4BxB,KAA5B;AAAA,QAAGU,KAAH,QAAGA,KAAH;AAAA,QAAUC,IAAV,QAAUA,IAAV;AAAA,QAAgBC,QAAhB,QAAgBA,QAAhB;AAAA,WACf,gCAAC,qBAAD;AACE,MAAA,GAAG,EAAEF,KADP;AAEE,MAAA,KAAK,EAAEA,KAFT;AAGE,MAAA,IAAI,EAAEC,IAHR;AAIE,MAAA,MAAM,EAAEF,MAJV;AAKE,MAAA,KAAK,EAAET,KALT;AAME,MAAA,QAAQ,EAAEgB,QANZ;AAOE,MAAA,QAAQ,EAAEJ;AAPZ,MADe;AAAA,GAAhB,CADH,CADF,CADF,EAgBE;AAAS,IAAA,SAAS,EAAC;AAAnB,KACGS,WAAW,CAACG,GAAZ,CAAgB;AAAA,QAAGzB,KAAH,SAAGA,KAAH;AAAA,WAAeA,KAAf;AAAA,GAAhB,CADH,CAhBF,CADF;AAsBD,CA7BW,CAAZ;;AA+BAc,GAAG,CAACa,SAAJ,GAAgB;AAKdT,EAAAA,KAAK,EAAEU,aALO;AASdX,EAAAA,QAAQ,EAAEY,sBAAUC,IAAV,CAAeC,UATX;AAadrB,EAAAA,MAAM,EAAEmB,sBAAUG,SAAV,CAAoB,CAC1BH,sBAAUI,MADgB,EAE1BJ,sBAAUK,MAFgB,CAApB,EAGLH,UAhBW;AAqBdZ,EAAAA,WAAW,EAAEU,sBAAUK,MArBT;AAyBdlB,EAAAA,QAAQ,EAAEa,sBAAUM;AAzBN,CAAhB;AA4BArB,GAAG,CAACsB,YAAJ,GAAmB;AACjBlB,EAAAA,KAAK,EAAE,SADU;AAEjBC,EAAAA,WAAW,EAAE,YAFI;AAGjBH,EAAAA,QAAQ,EAAEqB;AAHO,CAAnB;AAOAvB,GAAG,CAACwB,OAAJ,GAAclC,sBAAd;eAEeU,G","sourcesContent":["import React, { Children } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport TabContent from './TabContent';\nimport TabButton from './TabButton';\nimport { Color, warn } from '../../../shared';\nimport './tab.scss';\n\n/**\n * The filterTabChildren function filters out all elements different from TabContent type.\n * It returns an object which contain the cloned element plus some props useful to create tab buttons.\n */\nconst filterTabChildren = (child, index, props) => {\n  if (child.type !== TabContent) {\n    warn('Tab allows only Tab.Content children, other kind of elements will be wiped out');\n    return null;\n  }\n\n  const result = Object.create(null);\n\n  result.child = React.cloneElement(child, { active: props.active === index });\n  result.title = child.props.title;\n  result.icon = child.props.icon;\n  result.disabled = child.props.disabled;\n\n  return result;\n};\n\n\n/**\n * The Tab component consists of clickable labels that shows the corresponding content.\n */\n// the React.memo has been used here rather than on the export line like other cases, to avoid wrapping the shortcut.\nconst Tab = React.memo((props) => {\n  const { children, active, onChange, color, orientation, className, ...rest } = props;\n  const tabContents = Children.toArray(children).map((child, index) => filterTabChildren(child, index, props));\n  const classList = classNames(`bi bi-tab tab-color-${color}`, {\n    'tab-orientation': orientation === 'vertical',\n  }, className);\n\n  return (\n    <div className={classList} {...rest}>\n      <nav className=\"bi-tab-nav\">\n        <ul>\n          {tabContents.map(({ title, icon, disabled }, index) => (\n            <TabButton\n              key={title}\n              title={title}\n              icon={icon}\n              active={active}\n              index={index}\n              onChange={onChange}\n              disabled={disabled}\n            />\n          ))}\n        </ul>\n      </nav>\n      <section className=\"bi-tab-contents\">\n        {tabContents.map(({ child }) => child)}\n      </section>\n    </div>\n  );\n});\n\nTab.propTypes = {\n  /**\n   * Defines the color of the link into the label tab, can be one of the following:\n   * `default`, `primary`, `secondary`, `info`, `warning`, `success`, `danger`.\n   */\n  color: Color,\n  /**\n   * The callback to be performed on content change\n   */\n  onChange: PropTypes.func.isRequired,\n  /**\n   * Defines the current active tab index\n   */\n  active: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]).isRequired,\n  /**\n   /**\n   * This props defines the orientation of the tabs.\n   */\n  orientation: PropTypes.string,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n};\n\nTab.defaultProps = {\n  color: 'default',\n  orientation: 'horizontal',\n  children: undefined,\n};\n\n// shortcut\nTab.Content = TabContent;\n\nexport default Tab;\n"],"file":"Tab.js"}