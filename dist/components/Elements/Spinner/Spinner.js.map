{"version":3,"sources":["../../../../src/components/Elements/Spinner/Spinner.js"],"names":["Spinner","props","color","type","size","id","className","style","classes","propTypes","BaseProps","Color","PropTypes","oneOfType","Size","oneOf","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAOA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AAAA,MACjBC,KADiB,GAC2BD,KAD3B,CACjBC,KADiB;AAAA,MACVC,IADU,GAC2BF,KAD3B,CACVE,IADU;AAAA,MACJC,IADI,GAC2BH,KAD3B,CACJG,IADI;AAAA,MACEC,EADF,GAC2BJ,KAD3B,CACEI,EADF;AAAA,MACMC,SADN,GAC2BL,KAD3B,CACMK,SADN;AAAA,MACiBC,KADjB,GAC2BN,KAD3B,CACiBM,KADjB;AAEzB,MAAMC,OAAO,GAAG,4BAAW,IAAX,EAAiB,YAAjB,oBAA0CN,KAA1C,GAAmD;AACjE,kBAAcE,IAAI,KAAK,OAD0C;AAEjE,kBAAcA,IAAI,KAAK;AAF0C,GAAnD,EAGbE,SAHa,CAAhB;AAMA,SACE;AAAM,IAAA,SAAS,EAAEE,OAAjB;AAA0B,IAAA,EAAE,EAAEH,EAA9B;AAAkC,IAAA,KAAK,EAAEE;AAAzC,IADF;AAGD,CAXD;;AAaAP,OAAO,CAACS,SAAR,qBACKC,iBADL;AAMER,EAAAA,KAAK,EAAES,aANT;AAWEP,EAAAA,IAAI,EAAEQ,sBAAUC,SAAV,CAAoBC,YAApB,CAXR;AAiBEX,EAAAA,IAAI,EAAES,sBAAUG,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,MAAnB,EAA2B,MAA3B,CAAhB;AAjBR;AAoBAf,OAAO,CAACgB,YAAR,GAAuB;AACrBd,EAAAA,KAAK,EAAE,SADc;AAErBE,EAAAA,IAAI,EAAE,SAFe;AAGrBD,EAAAA,IAAI,EAAE;AAHe,CAAvB;eAMeH,O","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { BaseProps, Color, Size } from '../../../shared';\n\nimport './spinner.scss';\n\n/**\n * Spinner component\n */\nconst Spinner = (props) => {\n  const { color, type, size, id, className, style } = props;\n  const classes = classNames('bi', 'bi-spinner', `spinner-${color}`, {\n    'spinner-sm': size === 'small',\n    'spinner-lg': size === 'large',\n  }, className);\n\n\n  return (\n    <span className={classes} id={id} style={style} />\n  );\n};\n\nSpinner.propTypes = {\n  ...BaseProps,\n  /**\n   * defines the Spinner's color\n   * @default 'default'\n   */\n  color: Color,\n  /**\n   * defines the Spinner size, can be 'small', 'default', 'large'\n   * @default 'default'\n   */\n  size: PropTypes.oneOfType(Size),\n  /**\n   * defines the type of the glyph, can be 'circle', 'bars', 'puff' or 'dots'.\n   * Each one shows a different icon.\n   * @default 'circle'\n   */\n  type: PropTypes.oneOf(['circle', 'bars', 'puff', 'dots']),\n};\n\nSpinner.defaultProps = {\n  color: 'default',\n  size: 'default',\n  type: 'circle',\n};\n\nexport default Spinner;\n"],"file":"Spinner.js"}