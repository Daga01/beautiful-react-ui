{"version":3,"sources":["../../../../src/components/Elements/Spinner/Spinner.js"],"names":["Spinner","props","color","type","size","id","className","style","classes","propTypes","BaseProps","Color","Size","PropTypes","oneOf","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAOA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AAAA,MACjBC,KADiB,GAC2BD,KAD3B,CACjBC,KADiB;AAAA,MACVC,IADU,GAC2BF,KAD3B,CACVE,IADU;AAAA,MACJC,IADI,GAC2BH,KAD3B,CACJG,IADI;AAAA,MACEC,EADF,GAC2BJ,KAD3B,CACEI,EADF;AAAA,MACMC,SADN,GAC2BL,KAD3B,CACMK,SADN;AAAA,MACiBC,KADjB,GAC2BN,KAD3B,CACiBM,KADjB;AAGzB,MAAMC,OAAO,GAAG,4BAAW,IAAX,EAAiB,YAAjB,oBAA0CN,KAA1C,GAAmD;AACjE,eAAWE,IAAI,KAAK,OAD6C;AAEjE,eAAWA,IAAI,KAAK,OAF6C;AAGjE,qBAAiBD,IAAI,KAAK,OAHuC;AAIjE,sBAAkBA,IAAI,KAAK;AAJsC,GAAnD,EAKbG,SALa,CAAhB;AAOA,SACE;AAAM,IAAA,SAAS,EAAEE,OAAjB;AAA0B,IAAA,EAAE,EAAEH,EAA9B;AAAkC,IAAA,KAAK,EAAEE;AAAzC,IADF;AAGD,CAbD;;AAeAP,OAAO,CAACS,SAAR,qBACKC,iBADL;AAMER,EAAAA,KAAK,EAAES,aANT;AAWEP,EAAAA,IAAI,EAAEQ,YAXR;AAgBET,EAAAA,IAAI,EAAEU,sBAAUC,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,CAAhB;AAhBR;AAmBAd,OAAO,CAACe,YAAR,GAAuB;AACrBb,EAAAA,KAAK,EAAE,SADc;AAErBE,EAAAA,IAAI,EAAE,SAFe;AAGrBD,EAAAA,IAAI,EAAE;AAHe,CAAvB;eAMeH,O","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { BaseProps, Color, Size } from '../../../shared';\n\nimport './spinner.scss';\n\n/**\n * A Spinner component is used to show an animated glyph, mostly used to point that an activity has to complete.\n */\nconst Spinner = (props) => {\n  const { color, type, size, id, className, style } = props;\n\n  const classes = classNames('bi', 'bi-spinner', `spinner-${color}`, {\n    'spin-sm': size === 'small',\n    'spin-lg': size === 'large',\n    'spinner-pulse': type === 'pulse',\n    'spinner-circle': type === 'circle',\n  }, className);\n\n  return (\n    <span className={classes} id={id} style={style} />\n  );\n};\n\nSpinner.propTypes = {\n  ...BaseProps,\n  /**\n   * Defines the spinner color, can be `default`, `primary`, `secondary`, `info`, `warning`, `success`, `error`.\n   * @default \"default\"\n   */\n  color: Color,\n  /**\n   * Defines the button size, can be `small`, `default`, `large`\n   * @default \"default\"\n   */\n  size: Size,\n  /**\n   * Defines the spinner type, can be `circle` or `pulse`\n   * @default \"circle\"\n   */\n  type: PropTypes.oneOf(['circle', 'pulse']),\n};\n\nSpinner.defaultProps = {\n  color: 'default',\n  size: 'default',\n  type: 'circle',\n};\n\nexport default Spinner;\n"],"file":"Spinner.js"}