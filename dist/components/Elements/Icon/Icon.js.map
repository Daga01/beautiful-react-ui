{"version":3,"sources":["../../../../src/components/Elements/Icon/Icon.js"],"names":["library","add","fas","fab","Icon","name","color","size","className","rest","classList","faSize","propTypes","PropTypes","oneOfType","string","arrayOf","isRequired","Color","Size","defaultProps","undefined","React","memo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAKAA,4BAAQC,GAAR,CAAYC,sBAAZ,EAAiBC,uBAAjB;;AAMA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAA+C;AAAA,MAA5CC,IAA4C,QAA5CA,IAA4C;AAAA,MAAtCC,KAAsC,QAAtCA,KAAsC;AAAA,MAA/BC,IAA+B,QAA/BA,IAA+B;AAAA,MAAzBC,SAAyB,QAAzBA,SAAyB;AAAA,MAAXC,IAAW;;AAC1D,MAAMC,SAAS,GAAG,4BAAW,YAAX,YAA4BJ,KAAK,kBAAWA,KAAX,IAAqB,EAAtD,GAA4DE,SAA5D,CAAlB;AACA,MAAIG,MAAJ;;AAEA,MAAIJ,IAAI,KAAK,OAAb,EAAsB;AACpBI,IAAAA,MAAM,GAAG,IAAT;AACD;;AACD,MAAIJ,IAAI,KAAK,OAAb,EAAsB;AACpBI,IAAAA,MAAM,GAAG,IAAT;AACD;;AAED,SAAQ,gCAAC,iCAAD;AAAiB,IAAA,IAAI,EAAEN,IAAvB;AAA6B,IAAA,IAAI,EAAEM,MAAnC;AAA2C,IAAA,SAAS,EAAED,SAAtD;AAAiE,IAAA,UAAU;AAA3E,KAAgFD,IAAhF,EAAR;AACD,CAZD;;AAcAL,IAAI,CAACQ,SAAL,GAAiB;AAIfP,EAAAA,IAAI,EAAEQ,sBAAUC,SAAV,CAAoB,CACxBD,sBAAUE,MADc,EAExBF,sBAAUG,OAAV,CAAkBH,sBAAUE,MAA5B,CAFwB,CAApB,EAGHE,UAPY;AAWfX,EAAAA,KAAK,EAAEY,aAXQ;AAefX,EAAAA,IAAI,EAAEY;AAfS,CAAjB;AAkBAf,IAAI,CAACgB,YAAL,GAAoB;AAClBd,EAAAA,KAAK,EAAEe,SADW;AAElBd,EAAAA,IAAI,EAAEc;AAFY,CAApB;;eAKeC,kBAAMC,IAAN,CAAWnB,IAAX,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Size, Color } from '../../../shared';\n\nimport './icon.scss';\n\n// adding fa dependencies\nlibrary.add(fas, fab);\n\n/**\n * Icon component shows a glyph used to represent something.\n * Built on top of [font-awesome](https://fontawesome.com/);\n */\nconst Icon = ({ name, color, size, className, ...rest }) => {\n  const classList = classNames('bi bi-icon', `${color ? `icon-${color}` : ''}`, className);\n  let faSize;\n\n  if (size === 'small') {\n    faSize = 'sm';\n  }\n  if (size === 'large') {\n    faSize = 'lg';\n  }\n\n  return (<FontAwesomeIcon icon={name} size={faSize} className={classList} fixedWidth {...rest} />);\n};\n\nIcon.propTypes = {\n  /**\n   * The [font-awesome](https://fontawesome.com/) icon name\n   */\n  name: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]).isRequired,\n  /**\n   * The icon color, if not defined get the color of its parent.\n   */\n  color: Color,\n  /**\n   * The icon size, if not defined get the size of its parent text\n   */\n  size: Size,\n};\n\nIcon.defaultProps = {\n  color: undefined,\n  size: undefined,\n};\n\nexport default React.memo(Icon);\n"],"file":"Icon.js"}