{"version":3,"sources":["../../../../src/components/Elements/Accordion/AccordionContent.js"],"names":["AccordionContent","props","internalId","children","active","title","onChange","iconOpen","iconClose","rest","classList","icon","propTypes","PropTypes","string","isRequired","bool","func","IconProp","defaultProps","undefined","React","memo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAKA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAAA,MAC1BC,UAD0B,GACsDD,KADtD,CAC1BC,UAD0B;AAAA,MACdC,QADc,GACsDF,KADtD,CACdE,QADc;AAAA,MACJC,MADI,GACsDH,KADtD,CACJG,MADI;AAAA,MACIC,KADJ,GACsDJ,KADtD,CACII,KADJ;AAAA,MACWC,QADX,GACsDL,KADtD,CACWK,QADX;AAAA,MACqBC,QADrB,GACsDN,KADtD,CACqBM,QADrB;AAAA,MAC+BC,SAD/B,GACsDP,KADtD,CAC+BO,SAD/B;AAAA,MAC6CC,IAD7C,4BACsDR,KADtD;;AAElC,MAAMS,SAAS,GAAG,4BAAW,IAAX,EAAiB,gBAAjB,EAAmC;AACnD,wBAAoBN;AAD+B,GAAnC,CAAlB;AAGA,MAAMO,IAAI,GAAGP,MAAM,GAAGG,QAAH,GAAcC,SAAjC;AAEA,SACE;AAAK,IAAA,SAAS,EAAEE;AAAhB,KAA+BD,IAA/B,GACE,gCAAC,kBAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,KAAK,EAAC,aAFR;AAGE,IAAA,OAAO,MAHT;AAIE,IAAA,OAAO,EAAE,mBAAM;AACbH,MAAAA,QAAQ,CAACJ,UAAD,CAAR;AACD,KANH;AAOE,IAAA,SAAS,EAAC,kBAPZ;AAQE,IAAA,IAAI,EAAES;AARR,KAUGN,KAVH,CADF,EAaE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGF,QADH,CAbF,CADF;AAmBD,CA1BD;;AA4BAH,gBAAgB,CAACY,SAAjB,GAA6B;AAC3BV,EAAAA,UAAU,EAAEW,sBAAUC,MAAV,CAAiBC,UADF;AAE3BX,EAAAA,MAAM,EAAES,sBAAUG,IAAV,CAAeD,UAFI;AAG3BT,EAAAA,QAAQ,EAAEO,sBAAUI,IAAV,CAAeF,UAHE;AAI3BR,EAAAA,QAAQ,EAAEW,gBAJiB;AAK3BV,EAAAA,SAAS,EAAEU,gBALgB;AAM3Bb,EAAAA,KAAK,EAAEQ,sBAAUC;AANU,CAA7B;AASAd,gBAAgB,CAACmB,YAAjB,GAAgC;AAC9Bd,EAAAA,KAAK,EAAEe,SADuB;AAE9Bb,EAAAA,QAAQ,EAAE,OAFoB;AAG9BC,EAAAA,SAAS,EAAE;AAHmB,CAAhC;;eAMea,kBAAMC,IAAN,CAAWtB,gBAAX,C","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Button from '../Button';\nimport { IconProp } from '../../../shared';\n\n/**\n * Accordion content shows its content if active is provided\n */\nconst AccordionContent = (props) => {\n  const { internalId, children, active, title, onChange, iconOpen, iconClose, ...rest } = props;\n  const classList = classNames('bi', 'bi-acc-content', {\n    'acc-content-show': active,\n  });\n  const icon = active ? iconOpen : iconClose;\n\n  return (\n    <div className={classList} {...rest}>\n      <Button\n        block\n        color=\"transparent\"\n        outline\n        onClick={() => {\n          onChange(internalId);\n        }}\n        className=\"acc-title-button\"\n        icon={icon}\n      >\n        {title}\n      </Button>\n      <div className=\"acc-content\">\n        {children}\n      </div>\n    </div>\n  );\n};\n\nAccordionContent.propTypes = {\n  internalId: PropTypes.string.isRequired,\n  active: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n  iconOpen: IconProp,\n  iconClose: IconProp,\n  title: PropTypes.string,\n};\n\nAccordionContent.defaultProps = {\n  title: undefined,\n  iconOpen: 'minus',\n  iconClose: 'plus',\n};\n\nexport default React.memo(AccordionContent);\n"],"file":"AccordionContent.js"}