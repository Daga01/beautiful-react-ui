{"version":3,"sources":["../../../../src/components/Elements/Accordion/AccordionContent.js"],"names":["AccordionContent","props","internalId","children","active","title","onChange","rest","classList","onClickHandler","propTypes","PropTypes","oneOfType","string","number","isRequired","bool","func","node","defaultProps","undefined","React","memo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAKA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAAA,MAC1BC,UAD0B,GACiCD,KADjC,CAC1BC,UAD0B;AAAA,MACdC,QADc,GACiCF,KADjC,CACdE,QADc;AAAA,MACJC,MADI,GACiCH,KADjC,CACJG,MADI;AAAA,MACIC,KADJ,GACiCJ,KADjC,CACII,KADJ;AAAA,MACWC,QADX,GACiCL,KADjC,CACWK,QADX;AAAA,MACwBC,IADxB,4BACiCN,KADjC;;AAElC,MAAMO,SAAS,GAAG,4BAAW,IAAX,EAAiB,mBAAjB,EAAsC;AACtD,oBAAgBJ;AADsC,GAAtC,CAAlB;AAIA,MAAMK,cAAc,GAAG,0BAAaH,QAAb,EAAuBJ,UAAvB,CAAvB;AAEA,SACE;AAAK,IAAA,SAAS,EAAEM;AAAhB,KAA+BD,IAA/B,GACE,gCAAC,kBAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,KAAK,EAAC,aAApB;AAAkC,IAAA,OAAO,EAAEE,cAA3C;AAA2D,IAAA,SAAS,EAAC;AAArE,KACE,gCAAC,iBAAD,OADF,EAEGJ,KAFH,CADF,EAKE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGF,QADH,CALF,CADF;AAWD,CAnBD;;AAqBAH,gBAAgB,CAACU,SAAjB,GAA6B;AAC3BR,EAAAA,UAAU,EAAES,sBAAUC,SAAV,CAAoB,CAACD,sBAAUE,MAAX,EAAmBF,sBAAUG,MAA7B,CAApB,EAA0DC,UAD3C;AAE3BX,EAAAA,MAAM,EAAEO,sBAAUK,IAFS;AAG3BV,EAAAA,QAAQ,EAAEK,sBAAUM,IAHO;AAI3BZ,EAAAA,KAAK,EAAEM,sBAAUO;AAJU,CAA7B;AAOAlB,gBAAgB,CAACmB,YAAjB,GAAgC;AAC9Bf,EAAAA,MAAM,EAAE,KADsB;AAE9BC,EAAAA,KAAK,EAAEe,SAFuB;AAG9Bd,EAAAA,QAAQ,EAAEc;AAHoB,CAAhC;;eAMeC,kBAAMC,IAAN,CAAWtB,gBAAX,C","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Caret from '../_Caret';\nimport Button from '../Button';\nimport { makeCallback } from '../../../shared';\n\n/**\n * Accordion content shows its content if active is provided\n */\nconst AccordionContent = (props) => {\n  const { internalId, children, active, title, onChange, ...rest } = props;\n  const classList = classNames('bi', 'bi-accordion-item', {\n    'bi-item-open': active,\n  });\n\n  const onClickHandler = makeCallback(onChange, internalId);\n\n  return (\n    <div className={classList} {...rest}>\n      <Button fluid color=\"transparent\" onClick={onClickHandler} className=\"bi-accordion-toggle\">\n        <Caret />\n        {title}\n      </Button>\n      <div className=\"bi-accordion-content\">\n        {children}\n      </div>\n    </div>\n  );\n};\n\nAccordionContent.propTypes = {\n  internalId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  active: PropTypes.bool,\n  onChange: PropTypes.func,\n  title: PropTypes.node,\n};\n\nAccordionContent.defaultProps = {\n  active: false,\n  title: undefined,\n  onChange: undefined,\n};\n\nexport default React.memo(AccordionContent);\n"],"file":"AccordionContent.js"}