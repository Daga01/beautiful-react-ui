{"version":3,"sources":["../../../../src/components/Elements/Accordion/Accordion.js"],"names":["cloneAccordionContents","child","index","props","type","AccordionContent","React","cloneElement","internalId","active","onChange","iconOpen","iconClose","Accordion","memo","children","color","className","rest","classList","Children","map","propTypes","Color","PropTypes","func","isRequired","oneOfType","number","string","IconProp","node","defaultProps","undefined","Content"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAOA,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf,EAAyB;AACtD,MAAIF,KAAK,CAACG,IAAN,KAAeC,4BAAnB,EAAqC;AACnC,sBAAK,4FAAL;AAEA,WAAO,IAAP;AACD;;AAED,SAAOC,kBAAMC,YAAN,CAAmBN,KAAnB,EAA0B;AAC/BO,IAAAA,UAAU,EAAEN,KADmB;AAE/BO,IAAAA,MAAM,EAAEN,KAAK,CAACM,MAAN,KAAiBP,KAFM;AAG/BQ,IAAAA,QAAQ,EAAEP,KAAK,CAACO,QAHe;AAI/BC,IAAAA,QAAQ,EAAER,KAAK,CAACQ,QAJe;AAK/BC,IAAAA,SAAS,EAAET,KAAK,CAACS;AALc,GAA1B,CAAP;AAOD,CAdD;;AAqBA,IAAMC,SAAS,GAAGP,kBAAMQ,IAAN,CAAW,UAACX,KAAD,EAAW;AAAA,MAC9BY,QAD8B,GACUZ,KADV,CAC9BY,QAD8B;AAAA,MACpBC,KADoB,GACUb,KADV,CACpBa,KADoB;AAAA,MACbC,SADa,GACUd,KADV,CACbc,SADa;AAAA,MACCC,IADD,4BACUf,KADV;;AAEtC,MAAMgB,SAAS,GAAG,4BAAW,iBAAX,sBAA2CH,KAA3C,GAAoDC,SAApD,CAAlB;AAEA,SACE;AAAK,IAAA,SAAS,EAAEE;AAAhB,KAA+BD,IAA/B,GACGE,gBAASC,GAAT,CAAaN,QAAb,EAAuB,UAACd,KAAD,EAAQC,KAAR;AAAA,WAAkBF,sBAAsB,CAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf,CAAxC;AAAA,GAAvB,CADH,CADF;AAKD,CATiB,CAAlB;;AAeAU,SAAS,CAACS,SAAV,GAAsB;AAKpBN,EAAAA,KAAK,EAAEO,aALa;AASpBb,EAAAA,QAAQ,EAAEc,sBAAUC,IAAV,CAAeC,UATL;AAapBjB,EAAAA,MAAM,EAAEe,sBAAUG,SAAV,CAAoB,CAC1BH,sBAAUI,MADgB,EAE1BJ,sBAAUK,MAFgB,CAApB,EAGLH,UAhBiB;AAoBpBf,EAAAA,QAAQ,EAAEmB,gBApBU;AAwBpBlB,EAAAA,SAAS,EAAEkB,gBAxBS;AA4BpBf,EAAAA,QAAQ,EAAES,sBAAUO;AA5BA,CAAtB;AA+BAlB,SAAS,CAACmB,YAAV,GAAyB;AACvBjB,EAAAA,QAAQ,EAAEkB,SADa;AAEvBjB,EAAAA,KAAK,EAAE,SAFgB;AAGvBL,EAAAA,QAAQ,EAAE,OAHa;AAIvBC,EAAAA,SAAS,EAAE;AAJY,CAAzB;AAQAC,SAAS,CAACqB,OAAV,GAAoB7B,4BAApB;eAEeQ,S","sourcesContent":["import React, { Children } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { Color, IconProp, warn } from '../../../shared';\nimport AccordionContent from './AccordionContent';\n\nimport './accordion.scss';\n\n/**\n * returns only AccordionContent children whilst wipes out the others\n */\nconst cloneAccordionContents = (child, index, props) => {\n  if (child.type !== AccordionContent) {\n    warn('Accordion allows only Accordion.Content children, other kind of elements will be wiped out');\n\n    return null;\n  }\n\n  return React.cloneElement(child, {\n    internalId: index,\n    active: props.active === index,\n    onChange: props.onChange,\n    iconOpen: props.iconOpen,\n    iconClose: props.iconClose,\n  });\n};\n\n\n/**\n * Accordion is a controlled component used to toggle contents visibility.\n */\n// the React.memo has been used here rather than on the export line like other cases, to avoid wrapping the shortcut.\nconst Accordion = React.memo((props) => {\n  const { children, color, className, ...rest } = props;\n  const classList = classNames('bi bi-accordion', `acc-color-${color}`, className);\n\n  return (\n    <div className={classList} {...rest}>\n      {Children.map(children, (child, index) => cloneAccordionContents(child, index, props))}\n    </div>\n  );\n});\n\n/**\n * It is perfectly safe to disable the following eslint rule as the props it is referring to are actually passed\n * down to the cloneAccordionContents method.\n */\nAccordion.propTypes = {\n  /**\n   * Defines the color of the accordion, can be one of the following:\n   * `default`, `primary`, `secondary`, `info`, `warning`, `success`, `danger`.\n   */\n  color: Color,\n  /**\n   * The callback to be performed on content change\n   */\n  onChange: PropTypes.func.isRequired,\n  /**\n   * Defines the current active tab index\n   */\n  active: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]).isRequired,\n  /**\n   * Overrides the standard open icon\n   */\n  iconOpen: IconProp,\n  /**\n   * Overrides the standard close icon\n   */\n  iconClose: IconProp,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n};\n\nAccordion.defaultProps = {\n  children: undefined,\n  color: 'default',\n  iconOpen: 'minus',\n  iconClose: 'plus',\n};\n\n// shortcut to AccordionContent so that we can use it as the following: `Accordion.Content`\nAccordion.Content = AccordionContent;\n\nexport default Accordion;\n"],"file":"Accordion.js"}