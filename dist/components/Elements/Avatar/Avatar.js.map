{"version":3,"sources":["../../../../src/components/Elements/Avatar/Avatar.js"],"names":["Avatar","props","src","alt","shape","initials","size","state","pill","displayName","furtherInfo","className","rest","classList","slice","propTypes","Size","PropTypes","oneOf","string","PillProp","defaultProps","undefined","React","memo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Image from '../Image';\nimport Paragraph from '../../Typography/Paragraph';\nimport { makePillFromProp, PillProp, Size, warn } from '../../../shared';\n\nimport './avatar.scss';\n\n/**\n * Avatar component is meant to show the user's profile picture or its initials.\n */\nconst Avatar = (props) => {\n  const { src, alt, shape, initials, size, state, pill, displayName, furtherInfo, className, ...rest } = props;\n  const classList = classNames('bi bi-avatar', {\n    'avt-sm': size === 'small',\n    'avt-lg': size === 'large',\n    'avt-rounded': shape === 'rounded',\n    'avt-square': shape === 'square',\n    'avt-initials': initials,\n  }, className);\n\n  if (!initials && !src) {\n    warn('Avatar component has been used without providing a \\'src\\' nor an \\'initials\\' prop');\n    return null;\n  }\n\n  return (\n    <>\n      <div className={classList} {...rest}>\n        <div className=\"bi-avatar-item\">\n          {src && (<Image src={src} alt={alt} rounded={shape === 'rounded'} />)}\n          {initials && (<span className=\"initials\">{initials.slice(0, 2)}</span>)}\n        </div>\n        {pill && makePillFromProp(pill)}\n        {state && <span className={`avt-state state-${state}`} />}\n      </div>\n      {(displayName || furtherInfo) && (\n        <div className=\"bi-avatar-info\">\n          {displayName && (\n            <Paragraph className=\"avtr-disp-name\">\n              {displayName}\n            </Paragraph>\n          )}\n          {furtherInfo && (\n            <Paragraph className=\"avtr-furth-info\">{furtherInfo}</Paragraph>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nAvatar.propTypes = {\n  /**\n   * Defines the avatar size\n   */\n  size: Size,\n  /**\n   * Defines the avatar shape\n   */\n  shape: PropTypes.oneOf(['rounded', 'square']),\n  /**\n   * The avatar image source\n   */\n  src: PropTypes.string,\n  /**\n   * Shows the user's initials rather than her/his face\n   */\n  initials: PropTypes.string,\n  /**\n   * The avatar image alternative text\n   */\n  alt: PropTypes.string,\n  /**\n   * Shows a pill right under the image\n   */\n  pill: PillProp,\n  /**\n   * Defines the avatar shape\n   */\n  state: PropTypes.oneOf(['offline', 'online', 'danger']),\n  /**\n   * Defines the user display name\n   */\n  displayName: PropTypes.string,\n  /**\n   * Defines some further user's information\n   */\n  furtherInfo: PropTypes.string,\n};\n\nAvatar.defaultProps = {\n  size: 'default',\n  shape: 'rounded',\n  src: undefined,\n  initials: undefined,\n  alt: 'Avatar image',\n  pill: undefined,\n  state: undefined,\n  displayName: '',\n  furtherInfo: '',\n};\n\nexport default React.memo(Avatar);\n"],"file":"Avatar.js"}