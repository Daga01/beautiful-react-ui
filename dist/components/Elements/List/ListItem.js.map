{"version":3,"sources":["components/Elements/List/ListItem.js"],"names":["ListItem","props","checkbox","onChange","color","value","icon","draggable","onDragStart","onDragEnd","children","className","rest","checkboxProps","draggingProps","classList","propTypes","IconProp","PropTypes","bool","func","Color","defaultProps","undefined","React","memo"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Icon from '../Icon';\nimport Checkbox from '../../Forms/Checkbox';\nimport { IconProp, Color, makeIconFromProp } from '../../../shared';\nimport getCheckboxProps from './getCheckboxFurtherProps';\nimport getDraggingProps from './getDraggingFurtherProps';\n\n/**\n * Single List item\n */\nconst ListItem = (props) => {\n  const {\n    checkbox, onChange, color, value, icon, draggable, onDragStart, onDragEnd, children, className, ...rest\n  } = props;\n  const checkboxProps = useMemo(() => getCheckboxProps(checkbox, onChange, value), [checkbox, onChange, value]);\n  const draggingProps = useMemo(() => (\n    getDraggingProps(draggable, onDragStart, onDragEnd)\n  ), [draggable, onDragStart, onDragEnd]);\n\n  const classList = classNames('bi-list-item', `bi-list-item-${color}`, {\n    'bi-list-checkable': checkbox,\n    'bi-list-item-checked': value,\n    'bi-list-item-draggable': draggable,\n  }, className);\n\n  return (\n    <li className={classList} {...checkboxProps} {...draggingProps} {...rest}>\n      {icon && makeIconFromProp(icon, { className: 'bi-list-item-icon' })}\n      <span className=\"bi-list-item-content\">\n        {children}\n      </span>\n      {checkbox && <Checkbox onChange={onChange} value={value} color={color} className=\"bi-item-checkbox\" />}\n      {draggable && <Icon name=\"ellipsis-v\" className=\"bi-item-dragicon\" />}\n    </li>\n  );\n};\n\nListItem.propTypes = {\n  icon: IconProp,\n  checkbox: PropTypes.bool,\n  onChange: PropTypes.func,\n  value: PropTypes.bool,\n  color: Color,\n  draggable: PropTypes.bool,\n  onDragStart: PropTypes.func,\n  onDragEnd: PropTypes.func,\n};\n\nListItem.defaultProps = {\n  icon: undefined,\n  checkbox: false,\n  onChange: undefined,\n  value: undefined,\n  color: 'default',\n  draggable: false,\n  onDragStart: undefined,\n  onDragEnd: undefined,\n};\n\nexport default React.memo(ListItem);\n"],"file":"ListItem.js"}