{"version":3,"sources":["../../../../../src/components/Forms/Select/utils/findSelectedOptions.js"],"names":["findSingleOption","options","value","find","option","findMultipleOptions","filter","includes","findSelectedOptions","Array","isArray"],"mappings":";;;;;;;AAAA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,OAAD,EAAUC,KAAV;AAAA,SAAoBD,OAAO,CAACE,IAAR,CAAa,UAACC,MAAD;AAAA,WAAYA,MAAM,CAACF,KAAP,KAAiBA,KAA7B;AAAA,GAAb,CAApB;AAAA,CAAzB;;AACA,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACJ,OAAD,EAAUC,KAAV;AAAA,SAAoBD,OAAO,CAACK,MAAR,CAAe,UAACF,MAAD;AAAA,WAAYF,KAAK,CAACK,QAAN,CAAeH,MAAM,CAACF,KAAtB,CAAZ;AAAA,GAAf,CAApB;AAAA,CAA5B;;AASA,IAAMM,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACP,OAAD,EAAUC,KAAV;AAAA,SAC1BO,KAAK,CAACC,OAAN,CAAcR,KAAd,IACIG,mBAAmB,CAACJ,OAAD,EAAUC,KAAV,CADvB,GAEIF,gBAAgB,CAACC,OAAD,EAAUC,KAAV,CAHM;AAAA,CAA5B;;eAMeM,mB","sourcesContent":["const findSingleOption = (options, value) => options.find((option) => option.value === value);\nconst findMultipleOptions = (options, value) => options.filter((option) => value.includes(option.value));\n\n/**\n * The following function takes an array of options an return those matching the given value.\n * As the value may possibly be an array of values, two smaller functions has been used.\n * @param options\n * @param value\n * @returns {*}\n */\nconst findSelectedOptions = (options, value) => (\n  Array.isArray(value)\n    ? findMultipleOptions(options, value)\n    : findSingleOption(options, value)\n);\n\nexport default findSelectedOptions;\n"],"file":"findSelectedOptions.js"}