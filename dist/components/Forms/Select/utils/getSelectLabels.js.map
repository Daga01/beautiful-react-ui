{"version":3,"sources":["../../../../../src/components/Forms/Select/utils/getSelectLabels.js"],"names":["getSelectedLabels","items","multiStyle","Array","isArray","map","label","join"],"mappings":";;;;;;;AAAA;;AACA;;;;AAQA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAQC,UAAR,EAAuB;AAC/C,MAAIC,KAAK,CAACC,OAAN,CAAcH,KAAd,CAAJ,EAA0B;AACxB,QAAIC,UAAU,KAAK,OAAnB,EAA4B;AAC1B,aAAOD,KAAK,CAACI,GAAN,CAAU;AAAA,YAAGC,KAAH,QAAGA,KAAH;AAAA,eAAgB,gCAAC,gBAAD;AAAM,UAAA,GAAG,EAAEA;AAAX,WAAmBA,KAAnB,CAAhB;AAAA,OAAV,CAAP;AACD;;AAED,WAAOL,KAAK,CAACI,GAAN,CAAU;AAAA,UAAGC,KAAH,SAAGA,KAAH;AAAA,aAAeA,KAAf;AAAA,KAAV,EAAgCC,IAAhC,CAAqC,IAArC,CAAP;AACD;;AAED,SAAON,KAAK,CAACK,KAAb;AACD,CAVD;;eAYeN,iB","sourcesContent":["import React from 'react';\nimport Pill from '../../../Elements/Pill';\n\n/**\n * Takes an array of items (or a single item) and returns the label/React node to be shown.\n * @param items\n * @param multiStyle\n * @returns {*}\n */\nconst getSelectedLabels = (items, multiStyle) => {\n  if (Array.isArray(items)) {\n    if (multiStyle === 'pills') {\n      return items.map(({ label }) => (<Pill key={label}>{label}</Pill>));\n    }\n\n    return items.map(({ label }) => label).join(', ');\n  }\n\n  return items.label;\n};\n\nexport default getSelectedLabels;\n"],"file":"getSelectLabels.js"}