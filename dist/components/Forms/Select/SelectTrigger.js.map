{"version":3,"sources":["components/Forms/Select/SelectTrigger.js"],"names":["SelectTrigger","props","value","options","placeholder","clearable","onClear","helpText","hasOptionGroups","multiStyle","className","rest","onClearHandler","event","preventDefault","stopPropagation","classList","Array","isArray","length","propTypes","OptionsType","isRequired","ValueType","PropTypes","bool","string","oneOf","func","defaultProps","undefined","React","memo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport SelectLabel from './SelectLabel';\nimport Caret from '../../Elements/_Caret';\nimport CloseIcon from '../../Elements/_CloseIcon';\nimport OptionsType from './utils/OptionsType';\nimport HelpText from '../_HelpText';\nimport ValueType from './utils/ValueType';\n\n/**\n * Shows the select element\n */\nconst SelectTrigger = (props) => {\n  const {\n    value, options, placeholder, clearable, onClear, helpText, hasOptionGroups, multiStyle, className, ...rest\n  } = props;\n\n  const onClearHandler = (event) => {\n    if (onClear) {\n      event.preventDefault();\n      event.stopPropagation();\n      onClear();\n    }\n  };\n  const classList = classNames('bi-select-element', {\n    'select-multi': Array.isArray(value) && value.length >= 1,\n  });\n\n\n  return (\n    <>\n      <div className={className} {...rest}>\n        <div className={classList} role=\"button\" tabIndex={0}>\n          <SelectLabel\n            value={value}\n            options={options}\n            placeholder={placeholder}\n            hasOptionGroups={hasOptionGroups}\n            multiStyle={multiStyle}\n          />\n          {clearable && value && value.length > 0 && (\n            <span\n              className=\"sel-clear-x\"\n              onClick={onClearHandler}\n              onKeyDown={onClearHandler}\n              role=\"button\"\n              tabIndex={0}\n            >\n              <CloseIcon />\n            </span>\n          )}\n          <Caret />\n        </div>\n      </div>\n      {helpText && <HelpText text={helpText} />}\n    </>\n  );\n};\n\nSelectTrigger.propTypes = {\n  options: OptionsType.isRequired,\n  value: ValueType,\n  hasOptionGroups: PropTypes.bool,\n  placeholder: PropTypes.string,\n  multiStyle: PropTypes.oneOf(['strings', 'pills']),\n  helpText: PropTypes.string,\n  clearable: PropTypes.bool,\n  onClear: PropTypes.func,\n};\n\nSelectTrigger.defaultProps = {\n  value: undefined,\n  placeholder: undefined,\n  hasOptionGroups: false,\n  helpText: undefined,\n  multiStyle: 'pills',\n  clearable: true,\n  onClear: undefined,\n};\n\nexport default React.memo(SelectTrigger);\n"],"file":"SelectTrigger.js"}