{"version":3,"sources":["../../../../src/components/Forms/Select/SelectDropDown.js"],"names":["SelectDropDown","props","options","value","filtrable","placeholder","filterInputPlaceholder","filterNoResultLabel","hasOptionGroups","onChange","filter","setFilter","filteredOptions","classList","event","nextFilter","map","option","name","length","propTypes","OptionsType","isRequired","PropTypes","bool","ValueType","func","string","defaultProps","undefined","React","memo"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;AAKA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAAA,MAE9BC,OAF8B,GAG5BD,KAH4B,CAE9BC,OAF8B;AAAA,MAErBC,KAFqB,GAG5BF,KAH4B,CAErBE,KAFqB;AAAA,MAEdC,SAFc,GAG5BH,KAH4B,CAEdG,SAFc;AAAA,MAEqBC,WAFrB,GAG5BJ,KAH4B,CAEHK,sBAFG;AAAA,MAEkCC,mBAFlC,GAG5BN,KAH4B,CAEkCM,mBAFlC;AAAA,MAEuDC,eAFvD,GAG5BP,KAH4B,CAEuDO,eAFvD;AAAA,MAEwEC,QAFxE,GAG5BR,KAH4B,CAEwEQ,QAFxE;;AAAA,kBAIJ,qBAAS,EAAT,CAJI;AAAA;AAAA,MAIzBC,MAJyB;AAAA,MAIjBC,SAJiB;;AAKhC,MAAMC,eAAe,GAAG,oBAAQ;AAAA,WAC9BR,SAAS,GAAG,+BAAcF,OAAd,EAAuBQ,MAAvB,EAA+BF,eAA/B,CAAH,GAAqDN,OADhC;AAAA,GAAR,EAErB,CAACQ,MAAD,EAASR,OAAT,EAAkBM,eAAlB,CAFqB,CAAxB;AAIA,MAAMK,SAAS,GAAG,4BAAW,4BAAX,EAAyC;AACzDT,IAAAA,SAAS,EAATA,SADyD;AAEzD,oBAAgBI;AAFyC,GAAzC,CAAlB;AAKA,SACE;AAAK,IAAA,SAAS,EAAEK;AAAhB,KACGT,SAAS,IACR,gCAAC,iBAAD;AAAO,IAAA,KAAK,EAAEM,MAAd;AAAsB,IAAA,QAAQ,EAAE,kBAACI,KAAD,EAAQC,UAAR;AAAA,aAAuBJ,SAAS,CAACI,UAAD,CAAhC;AAAA,KAAhC;AAA8E,IAAA,WAAW,EAAEV;AAA3F,IAFJ,EAIGO,eAAe,CAACI,GAAhB,CAAoB,UAACC,MAAD;AAAA,WACnBT,eAAe,GACX,gCAAC,6BAAD;AAAmB,MAAA,KAAK,EAAES,MAA1B;AAAkC,MAAA,OAAO,EAAER,QAA3C;AAAqD,MAAA,KAAK,EAAEN,KAA5D;AAAmE,MAAA,GAAG,EAAEc,MAAM,CAACC;AAA/E,MADW,GAEX,gCAAC,wBAAD;AAAc,MAAA,MAAM,EAAED,MAAtB;AAA8B,MAAA,QAAQ,EAAE,kCAAWA,MAAX,EAAmBd,KAAnB,CAAxC;AAAmE,MAAA,OAAO,EAAEM,QAA5E;AAAsF,MAAA,GAAG,EAAEQ,MAAM,CAACd;AAAlG,MAHe;AAAA,GAApB,CAJH,EASGC,SAAS,IAAIQ,eAAe,CAACO,MAAhB,KAA2B,CAAxC,IACC;AAAG,IAAA,SAAS,EAAC;AAAb,KAA2BZ,mBAA3B,CAVJ,CADF;AAeD,CA7BD;;AA+BAP,cAAc,CAACoB,SAAf,GAA2B;AACzBlB,EAAAA,OAAO,EAAEmB,wBAAYC,UADI;AAEzBd,EAAAA,eAAe,EAAEe,sBAAUC,IAFF;AAGzBrB,EAAAA,KAAK,EAAEsB,qBAHkB;AAIzBhB,EAAAA,QAAQ,EAAEc,sBAAUG,IAJK;AAKzBtB,EAAAA,SAAS,EAAEmB,sBAAUC,IAAV,CAAeF,UALD;AAMzBhB,EAAAA,sBAAsB,EAAEiB,sBAAUI,MAAV,CAAiBL,UANhB;AAOzBf,EAAAA,mBAAmB,EAAEgB,sBAAUI,MAAV,CAAiBL;AAPb,CAA3B;AAUAtB,cAAc,CAAC4B,YAAf,GAA8B;AAC5BpB,EAAAA,eAAe,EAAE,KADW;AAE5BL,EAAAA,KAAK,EAAE0B,SAFqB;AAG5BpB,EAAAA,QAAQ,EAAEoB;AAHkB,CAA9B;;eAMeC,kBAAMC,IAAN,CAAW/B,cAAX,C","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Input from '../Input';\nimport SelectOption from './SelectOption';\nimport SelectOptionGroup from './SelectOptionGroup';\nimport filterOptions from './utils/filterOptions';\nimport isSelected from './utils/optionIsSelected';\nimport OptionsType from './utils/OptionsType';\nimport ValueType from './utils/ValueType';\n\n/**\n * Shows the select drop-down menu\n */\nconst SelectDropDown = (props) => {\n  const {\n    options, value, filtrable, filterInputPlaceholder: placeholder, filterNoResultLabel, hasOptionGroups, onChange,\n  } = props;\n  const [filter, setFilter] = useState('');\n  const filteredOptions = useMemo(() => (\n    filtrable ? filterOptions(options, filter, hasOptionGroups) : options\n  ), [filter, options, hasOptionGroups]);\n\n  const classList = classNames('bi-select-options-dropdown', {\n    filtrable,\n    'grouped-opts': hasOptionGroups,\n  });\n\n  return (\n    <div className={classList}>\n      {filtrable && (\n        <Input value={filter} onChange={(event, nextFilter) => setFilter(nextFilter)} placeholder={placeholder} />\n      )}\n      {filteredOptions.map((option) => (\n        hasOptionGroups\n          ? <SelectOptionGroup group={option} onClick={onChange} value={value} key={option.name} />\n          : <SelectOption option={option} selected={isSelected(option, value)} onClick={onChange} key={option.value} />\n      ))}\n      {filtrable && filteredOptions.length === 0 && (\n        <p className=\"no-results\">{filterNoResultLabel}</p>\n      )}\n    </div>\n  );\n};\n\nSelectDropDown.propTypes = {\n  options: OptionsType.isRequired,\n  hasOptionGroups: PropTypes.bool,\n  value: ValueType,\n  onChange: PropTypes.func,\n  filtrable: PropTypes.bool.isRequired,\n  filterInputPlaceholder: PropTypes.string.isRequired,\n  filterNoResultLabel: PropTypes.string.isRequired,\n};\n\nSelectDropDown.defaultProps = {\n  hasOptionGroups: false,\n  value: undefined,\n  onChange: undefined,\n};\n\nexport default React.memo(SelectDropDown);\n"],"file":"SelectDropDown.js"}