{"version":3,"sources":["../../../../src/components/Forms/_Label/Label.js"],"names":["Label","props","color","text","required","className","htmlFor","children","rest","classes","propTypes","PropTypes","string","isRequired","Color","bool","defaultProps","undefined","React","memo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;AAOA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA,MACfC,KADe,GACkDD,KADlD,CACfC,KADe;AAAA,MACRC,IADQ,GACkDF,KADlD,CACRE,IADQ;AAAA,MACFC,QADE,GACkDH,KADlD,CACFG,QADE;AAAA,MACQC,SADR,GACkDJ,KADlD,CACQI,SADR;AAAA,MACmBC,OADnB,GACkDL,KADlD,CACmBK,OADnB;AAAA,MAC4BC,QAD5B,GACkDN,KADlD,CAC4BM,QAD5B;AAAA,MACyCC,IADzC,4BACkDP,KADlD;;AAGvB,MAAMQ,OAAO,GAAG,4BAAW,aAAX,kBAAmCP,KAAnC,GAA4C;AAAEE,IAAAA,QAAQ,EAARA;AAAF,GAA5C,EAA0DC,SAA1D,CAAhB;AAEA,SAEE;AAAO,IAAA,OAAO,EAAEC,OAAhB;AAAyB,IAAA,SAAS,EAAEG;AAApC,KAAiDD,IAAjD,GACGL,IADH,EAEGI,QAFH,EAGGH,QAAQ,IAAI,kDAHf,CAFF;AAQD,CAbD;;AAeAJ,KAAK,CAACU,SAAN,GAAkB;AAIhBP,EAAAA,IAAI,EAAEQ,sBAAUC,MAJA;AAQhBN,EAAAA,OAAO,EAAEK,sBAAUC,MAAV,CAAiBC,UARV;AAYhBX,EAAAA,KAAK,EAAEY,aAZS;AAgBhBV,EAAAA,QAAQ,EAAEO,sBAAUI;AAhBJ,CAAlB;AAoBAf,KAAK,CAACgB,YAAN,GAAqB;AACnBb,EAAAA,IAAI,EAAEc,SADa;AAEnBf,EAAAA,KAAK,EAAE,SAFY;AAGnBE,EAAAA,QAAQ,EAAE;AAHS,CAArB;;eAMec,kBAAMC,IAAN,CAAWnB,KAAX,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Color } from '../../../shared';\n\nimport './label.scss';\n\n/**\n * The Label component is used within this very same library to render forms' related labels\n */\nconst Label = (props) => {\n  const { color, text, required, className, htmlFor, children, ...rest } = props;\n\n  const classes = classNames('bi bi-label', `label-${color}`, { required }, className);\n\n  return (\n    /* eslint-disable-next-line jsx-a11y/label-has-for */\n    <label htmlFor={htmlFor} className={classes} {...rest}>\n      {text}\n      {children}\n      {required && <span>*</span>}\n    </label>\n  );\n};\n\nLabel.propTypes = {\n  /**\n   * The label text\n   */\n  text: PropTypes.string,\n  /**\n   * The label `for` attribute\n   */\n  htmlFor: PropTypes.string.isRequired,\n  /**\n   * The label color\n   */\n  color: Color,\n  /**\n   * Defines whether the label is referring to a required input or not\n   */\n  required: PropTypes.bool,\n};\n\n\nLabel.defaultProps = {\n  text: undefined,\n  color: 'default',\n  required: false,\n};\n\nexport default React.memo(Label);\n"],"file":"Label.js"}