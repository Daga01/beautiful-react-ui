{"version":3,"sources":["../../../../src/components/Forms/_Label/Label.js"],"names":["Label","props","color","text","required","tagName","htmlFor","children","className","rest","Tag","includes","classes","propTypes","PropTypes","string","Color","oneOf","bool","isRequired","defaultProps","undefined","React","memo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;AAOA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA,MACfC,KADe,GAC2DD,KAD3D,CACfC,KADe;AAAA,MACRC,IADQ,GAC2DF,KAD3D,CACRE,IADQ;AAAA,MACFC,QADE,GAC2DH,KAD3D,CACFG,QADE;AAAA,MACQC,OADR,GAC2DJ,KAD3D,CACQI,OADR;AAAA,MACiBC,OADjB,GAC2DL,KAD3D,CACiBK,OADjB;AAAA,MAC0BC,QAD1B,GAC2DN,KAD3D,CAC0BM,QAD1B;AAAA,MACoCC,SADpC,GAC2DP,KAD3D,CACoCO,SADpC;AAAA,MACkDC,IADlD,4BAC2DR,KAD3D;;AAEvB,MAAMS,GAAG,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkBC,QAAlB,CAA2BN,OAA3B,IAAsCA,OAAtC,GAAgD,OAA5D;AAEA,MAAMO,OAAO,GAAG,4BAAW,aAAX,qBAAsCV,KAAtC,GAA+C;AAAEE,IAAAA,QAAQ,EAARA;AAAF,GAA/C,EAA6DI,SAA7D,CAAhB;AAEA,SACE,gCAAC,GAAD;AAAK,IAAA,OAAO,EAAEF,OAAd;AAAuB,IAAA,SAAS,EAAEM;AAAlC,KAA+CH,IAA/C,GACGN,IADH,EAEGI,QAFH,EAGGH,QAAQ,IAAI,kDAHf,CADF;AAOD,CAbD;;AAeAJ,KAAK,CAACa,SAAN,GAAkB;AAIhBV,EAAAA,IAAI,EAAEW,sBAAUC,MAJA;AAQhBb,EAAAA,KAAK,EAAEc,aARS;AAYhBX,EAAAA,OAAO,EAAES,sBAAUG,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB,CAZO;AAgBhBb,EAAAA,QAAQ,EAAEU,sBAAUI,IAhBJ;AAoBhBZ,EAAAA,OAAO,EAAEQ,sBAAUC,MAAV,CAAiBI;AApBV,CAAlB;AAwBAnB,KAAK,CAACoB,YAAN,GAAqB;AACnBjB,EAAAA,IAAI,EAAEkB,SADa;AAEnBnB,EAAAA,KAAK,EAAE,SAFY;AAGnBE,EAAAA,QAAQ,EAAE,KAHS;AAInBC,EAAAA,OAAO,EAAE;AAJU,CAArB;;eAOeiB,kBAAMC,IAAN,CAAWvB,KAAX,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Color } from '../../../shared';\n\nimport './label.scss';\n\n/**\n * The Label component is used within this very same library to render forms' related labels\n */\nconst Label = (props) => {\n  const { color, text, required, tagName, htmlFor, children, className, ...rest } = props;\n  const Tag = ['span', 'label'].includes(tagName) ? tagName : 'label';\n\n  const classes = classNames('bi bi-label', `bi-label-${color}`, { required }, className);\n\n  return (\n    <Tag htmlFor={htmlFor} className={classes} {...rest}>\n      {text}\n      {children}\n      {required && <span>*</span>}\n    </Tag>\n  );\n};\n\nLabel.propTypes = {\n  /**\n   * Defines the text to be shown\n   */\n  text: PropTypes.string,\n  /**\n   * Defines the label color\n   */\n  color: Color,\n  /**\n   * Defines the label html tag\n   */\n  tagName: PropTypes.oneOf(['span', 'label']),\n  /**\n   * Defines whether the label is referring to a required input or not\n   */\n  required: PropTypes.bool,\n  /**\n   * Defines the possible label `for` attribute\n   */\n  htmlFor: PropTypes.string.isRequired,\n};\n\n\nLabel.defaultProps = {\n  text: undefined,\n  color: 'default',\n  required: false,\n  tagName: 'label',\n};\n\nexport default React.memo(Label);\n"],"file":"Label.js"}