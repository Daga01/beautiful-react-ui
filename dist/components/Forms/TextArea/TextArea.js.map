{"version":3,"sources":["components/Forms/TextArea/TextArea.js"],"names":["TextArea","props","color","onChange","value","fluid","size","placeholder","disabled","helpText","resizable","className","rest","classList","propTypes","PropTypes","oneOfType","number","string","func","bool","Color","Size","defaultProps","undefined","React","memo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAOA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA,MAClBC,KADkB,GACsFD,KADtF,CAClBC,KADkB;AAAA,MACXC,QADW,GACsFF,KADtF,CACXE,QADW;AAAA,MACDC,KADC,GACsFH,KADtF,CACDG,KADC;AAAA,MACMC,KADN,GACsFJ,KADtF,CACMI,KADN;AAAA,MACaC,IADb,GACsFL,KADtF,CACaK,IADb;AAAA,MACmBC,WADnB,GACsFN,KADtF,CACmBM,WADnB;AAAA,MACgCC,QADhC,GACsFP,KADtF,CACgCO,QADhC;AAAA,MAC0CC,QAD1C,GACsFR,KADtF,CAC0CQ,QAD1C;AAAA,MACoDC,SADpD,GACsFT,KADtF,CACoDS,SADpD;AAAA,MAC+DC,SAD/D,GACsFV,KADtF,CAC+DU,SAD/D;AAAA,MAC6EC,IAD7E,4BACsFX,KADtF;;AAG1B,MAAMY,SAAS,GAAG,4BAAW,gBAAX,qBAAyCX,KAAzC,GAAkD;AAClEM,IAAAA,QAAQ,EAARA,QADkE;AAElE,mBAAeF,IAAI,KAAK,OAF0C;AAGlE,mBAAeA,IAAI,KAAK,OAH0C;AAIlED,IAAAA,KAAK,EAALA,KAJkE;AAKlEK,IAAAA,SAAS,EAATA;AALkE,GAAlD,EAMfC,SANe,CAAlB;AAQA,SACE;AAAK,IAAA,SAAS,EAAEE;AAAhB,KACE;AACE,IAAA,KAAK,EAAET,KADT;AAEE,IAAA,QAAQ,EAAE,0BAAaD,QAAb,CAFZ;AAGE,IAAA,WAAW,EAAEI,WAHf;AAIE,IAAA,QAAQ,EAAEC;AAJZ,KAKMI,IALN,EADF,EAQGH,QAAQ,IAAI,gCAAC,oBAAD;AAAU,IAAA,IAAI,EAAEA,QAAhB;AAA0B,IAAA,KAAK,EAAEP;AAAjC,IARf,CADF;AAYD,CAvBD;;AA0BAF,QAAQ,CAACc,SAAT,GAAqB;AAInBV,EAAAA,KAAK,EAAEW,sBAAUC,SAAV,CAAoB,CAACD,sBAAUE,MAAX,EAAmBF,sBAAUG,MAA7B,CAApB,CAJY;AAQnBf,EAAAA,QAAQ,EAAEY,sBAAUI,IARD;AAYnBZ,EAAAA,WAAW,EAAEQ,sBAAUG,MAZJ;AAgBnBV,EAAAA,QAAQ,EAAEO,sBAAUK,IAhBD;AAoBnBlB,EAAAA,KAAK,EAAEmB,aApBY;AAwBnBf,EAAAA,IAAI,EAAEgB,YAxBa;AA4BnBjB,EAAAA,KAAK,EAAEU,sBAAUK,IA5BE;AAgCnBX,EAAAA,QAAQ,EAAEM,sBAAUG,MAhCD;AAoCnBR,EAAAA,SAAS,EAAEK,sBAAUK;AApCF,CAArB;AAuCApB,QAAQ,CAACuB,YAAT,GAAwB;AACtBnB,EAAAA,KAAK,EAAE,IADe;AAEtBD,EAAAA,QAAQ,EAAEqB,SAFY;AAGtBjB,EAAAA,WAAW,EAAE,qBAHS;AAItBC,EAAAA,QAAQ,EAAE,KAJY;AAKtBN,EAAAA,KAAK,EAAE,SALe;AAMtBI,EAAAA,IAAI,EAAE,SANgB;AAOtBD,EAAAA,KAAK,EAAE,KAPe;AAQtBI,EAAAA,QAAQ,EAAEe,SARY;AAStBd,EAAAA,SAAS,EAAE;AATW,CAAxB;;eAYee,kBAAMC,IAAN,CAAW1B,QAAX,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Color, makeCallback, Size } from '../../../shared';\nimport HelpText from '../_HelpText';\n\nimport './textarea.scss';\n\n/**\n * A TextArea component is a large text field mostly used for larger texts\n */\nconst TextArea = (props) => {\n  const { color, onChange, value, fluid, size, placeholder, disabled, helpText, resizable, className, ...rest } = props;\n\n  const classList = classNames('bi bi-textarea', `textarea-${color}`, {\n    disabled,\n    'textarea-sm': size === 'small',\n    'textarea-lg': size === 'large',\n    fluid,\n    resizable,\n  }, className);\n\n  return (\n    <div className={classList}>\n      <textarea\n        value={value}\n        onChange={makeCallback(onChange)}\n        placeholder={placeholder}\n        disabled={disabled}\n        {...rest}\n      />\n      {helpText && <HelpText text={helpText} color={color} />}\n    </div>\n  );\n};\n\n\nTextArea.propTypes = {\n  /**\n   * The component value\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The onChange handler\n   */\n  onChange: PropTypes.func,\n  /**\n   * Defines the placeholder\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Disables the textarea\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Defines the textarea border color\n   */\n  color: Color,\n  /**\n   * Defines the textarea size,\n   */\n  size: Size,\n  /**\n   * Defines if the textarea should take all the possible width\n   */\n  fluid: PropTypes.bool,\n  /**\n   * Displays a help text right under the component\n   */\n  helpText: PropTypes.string,\n  /**\n   * Defines if the textarea should be resizable or not\n   */\n  resizable: PropTypes.bool,\n};\n\nTextArea.defaultProps = {\n  value: null,\n  onChange: undefined,\n  placeholder: 'Insert your text...',\n  disabled: false,\n  color: 'default',\n  size: 'default',\n  fluid: false,\n  helpText: undefined,\n  resizable: false,\n};\n\nexport default React.memo(TextArea);\n"],"file":"TextArea.js"}