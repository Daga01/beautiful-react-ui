{"version":3,"sources":["../../../../src/components/Forms/DisplayField/DisplayField.js"],"names":["DisplayField","props","className","value","valueColor","label","labelColor","borderStyle","boldLabel","boldValue","rest","classList","propTypes","PropTypes","string","isRequired","Color","node","oneOf","bool","defaultProps","React","memo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAOA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA;;AAAA,MACtBC,SADsB,GAC0ED,KAD1E,CACtBC,SADsB;AAAA,MACXC,KADW,GAC0EF,KAD1E,CACXE,KADW;AAAA,MACJC,UADI,GAC0EH,KAD1E,CACJG,UADI;AAAA,MACQC,KADR,GAC0EJ,KAD1E,CACQI,KADR;AAAA,MACeC,UADf,GAC0EL,KAD1E,CACeK,UADf;AAAA,MAC2BC,WAD3B,GAC0EN,KAD1E,CAC2BM,WAD3B;AAAA,MACwCC,SADxC,GAC0EP,KAD1E,CACwCO,SADxC;AAAA,MACmDC,SADnD,GAC0ER,KAD1E,CACmDQ,SADnD;AAAA,MACiEC,IADjE,4BAC0ET,KAD1E;;AAE9B,MAAMU,SAAS,GAAG,4BAAW,UAAX,kBAAgCP,UAAhC,0EACCG,WADD,GACiB,CAAC,CAACA,WADnB,gCAEhB,kBAFgB,EAEIC,SAFJ,gCAGhB,kBAHgB,EAGIC,SAHJ,iBAIfP,SAJe,CAAlB;AAMA,SACE;AAAK,IAAA,SAAS,EAAES;AAAhB,KAA+BD,IAA/B,GACE,gCAAC,iBAAD;AAAO,IAAA,KAAK,EAAEJ,UAAd;AAA0B,IAAA,OAAO,EAAC,MAAlC;AAAyC,IAAA,SAAS,EAAC;AAAnD,KAAkED,KAAlE,CADF,EAEE;AAAM,IAAA,SAAS,EAAC;AAAhB,KAA+BF,KAA/B,CAFF,CADF;AAMD,CAdD;;AAiBAH,YAAY,CAACY,SAAb,GAAyB;AAIvBP,EAAAA,KAAK,EAAEQ,sBAAUC,MAAV,CAAiBC,UAJD;AAQvBT,EAAAA,UAAU,EAAEU,aARW;AAYvBb,EAAAA,KAAK,EAAEU,sBAAUI,IAAV,CAAeF,UAZC;AAgBvBX,EAAAA,UAAU,EAAEY,aAhBW;AAoBvBT,EAAAA,WAAW,EAAEM,sBAAUK,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,QAApB,EAA8B,QAA9B,EAAwC,MAAxC,CAAhB,CApBU;AAwBvBV,EAAAA,SAAS,EAAEK,sBAAUM,IAxBE;AA4BvBV,EAAAA,SAAS,EAAEI,sBAAUM;AA5BE,CAAzB;AAgCAnB,YAAY,CAACoB,YAAb,GAA4B;AAC1Bd,EAAAA,UAAU,EAAE,SADc;AAE1BF,EAAAA,UAAU,EAAE,SAFc;AAG1BG,EAAAA,WAAW,EAAE,OAHa;AAI1BC,EAAAA,SAAS,EAAE,IAJe;AAK1BC,EAAAA,SAAS,EAAE;AALe,CAA5B;;eAQeY,kBAAMC,IAAN,CAAWtB,YAAX,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Label from '../Label';\nimport { Color } from '../../../shared';\n\nimport './display-field.scss';\n\n/**\n * A display-only text field useful for displaying ead-only values with labels.\n */\nconst DisplayField = (props) => {\n  const { className, value, valueColor, label, labelColor, borderStyle, boldLabel, boldValue, ...rest } = props;\n  const classList = classNames('bi bi-df', `bi-df-${valueColor}`, {\n    [`bi-df-border-${borderStyle}`]: !!borderStyle,\n    'bi-df-bold-label': boldLabel,\n    'bi-df-bold-value': boldValue,\n  }, className);\n\n  return (\n    <div className={classList} {...rest}>\n      <Label color={labelColor} tagName=\"span\" className=\"bi-df-label\">{label}</Label>\n      <span className=\"bi-df-value\">{value}</span>\n    </div>\n  );\n};\n\n\nDisplayField.propTypes = {\n  /**\n   * Defines the field label\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * Defines the label color\n   */\n  labelColor: Color,\n  /**\n   * Defines field value\n   */\n  value: PropTypes.node.isRequired,\n  /**\n   * Defines the value color\n   */\n  valueColor: Color,\n  /**\n   * Defines the border style\n   */\n  borderStyle: PropTypes.oneOf(['solid', 'dashed', 'dotted', 'double', 'none']),\n  /**\n   * Set the font-weight of the label to bold\n   */\n  boldLabel: PropTypes.bool,\n  /**\n   * Set the font-weight of the value to bold\n   */\n  boldValue: PropTypes.bool,\n};\n\n\nDisplayField.defaultProps = {\n  labelColor: 'default',\n  valueColor: 'default',\n  borderStyle: 'solid',\n  boldLabel: true,\n  boldValue: false,\n};\n\nexport default React.memo(DisplayField);\n"],"file":"DisplayField.js"}