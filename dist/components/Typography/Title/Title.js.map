{"version":3,"sources":["../../../../src/components/Typography/Title/Title.js"],"names":["Title","props","children","color","tagName","textAlign","className","rest","TitleTag","includes","classList","propTypes","Color","PropTypes","oneOf","defaultProps","undefined","React","memo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAWA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA,MACfC,QADe,GAC6CD,KAD7C,CACfC,QADe;AAAA,MACLC,KADK,GAC6CF,KAD7C,CACLE,KADK;AAAA,MACEC,OADF,GAC6CH,KAD7C,CACEG,OADF;AAAA,MACWC,SADX,GAC6CJ,KAD7C,CACWI,SADX;AAAA,MACsBC,SADtB,GAC6CL,KAD7C,CACsBK,SADtB;AAAA,MACoCC,IADpC,4BAC6CN,KAD7C;;AAEvB,MAAMO,QAAQ,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqCC,QAArC,CAA8CL,OAA9C,IAAyDA,OAAzD,GAAmE,IAApF;AACA,MAAMM,SAAS,GAAG,4BAAW,UAAX,qBAAmCP,KAAnC,0CACHE,SADG,GACW,CAAC,CAACA,SADb,GAEfC,SAFe,CAAlB;AAIA,SACE,gCAAC,QAAD;AAAU,IAAA,SAAS,EAAEI;AAArB,KAAoCH,IAApC,GACGL,QADH,CADF;AAKD,CAZD;;AAcAF,KAAK,CAACW,SAAN,GAAkB;AAKhBR,EAAAA,KAAK,EAAES,aALS;AAShBR,EAAAA,OAAO,EAAES,sBAAUC,KAAV,CAAgB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,CAAhB,CATO;AAahBT,EAAAA,SAAS,EAAEQ,sBAAUC,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,OAAnB,EAA4B,SAA5B,CAAhB;AAbK,CAAlB;AAgBAd,KAAK,CAACe,YAAN,GAAqB;AACnBZ,EAAAA,KAAK,EAAE,SADY;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,SAAS,EAAEW;AAHQ,CAArB;;eAMeC,kBAAMC,IAAN,CAAWlB,KAAX,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Color } from '../../../shared';\n\nimport './title.scss';\n\n/**\n * As Beautiful-ui does not impose a general styles by creating and applying extra css classes,\n * a set of typography components as been created to possibly have the same style both for UI components and texts.\n * The Typography components are used within the library itself.\n *\n * Here's the Title component\n */\nconst Title = (props) => {\n  const { children, color, tagName, textAlign, className, ...rest } = props;\n  const TitleTag = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].includes(tagName) ? tagName : 'h1';\n  const classList = classNames('bi-title', `bi-title-${color}`, {\n    [`bi-title-${textAlign}`]: !!textAlign,\n  }, className);\n\n  return (\n    <TitleTag className={classList} {...rest}>\n      {children}\n    </TitleTag>\n  );\n};\n\nTitle.propTypes = {\n  /*\n   * Defines the title color, can be one of the following:\n   * `default`, `primary`, `secondary`, `info`, `warning`, `success`, `danger`.\n   */\n  color: Color,\n  /**\n   * Defines which tag should be used to render the title\n   */\n  tagName: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6']),\n  /**\n   * Defines the title text align\n   */\n  textAlign: PropTypes.oneOf(['center', 'left', 'right', 'justify']),\n};\n\nTitle.defaultProps = {\n  color: 'default',\n  tagName: 'h1',\n  textAlign: undefined,\n};\n\nexport default React.memo(Title);\n"],"file":"Title.js"}