{"version":3,"sources":["../../../../src/components/Typography/Paragraph/Paragraph.js"],"names":["Paragraph","props","children","color","fontFamily","textAlign","className","wordBreak","rest","classList","propTypes","Color","PropTypes","oneOf","defaultProps","undefined","React","memo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAaA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAAA;;AAAA,MACnBC,QADmB,GACuDD,KADvD,CACnBC,QADmB;AAAA,MACTC,KADS,GACuDF,KADvD,CACTE,KADS;AAAA,MACFC,UADE,GACuDH,KADvD,CACFG,UADE;AAAA,MACUC,SADV,GACuDJ,KADvD,CACUI,SADV;AAAA,MACqBC,SADrB,GACuDL,KADvD,CACqBK,SADrB;AAAA,MACgCC,SADhC,GACuDN,KADvD,CACgCM,SADhC;AAAA,MAC8CC,IAD9C,4BACuDP,KADvD;;AAE3B,MAAMQ,SAAS,GAAG,4BAAW,SAAX,iBAA8BN,KAA9B,mBAAgDC,UAAhD,kEACPC,SADO,GACO,CAAC,CAACA,SADT,qDAEDE,SAFC,GAEa,CAAC,CAACA,SAFf,iBAGfD,SAHe,CAAlB;AAKA,SACE;AAAG,IAAA,SAAS,EAAEG;AAAd,KAA6BD,IAA7B,GAAoCN,QAApC,CADF;AAGD,CAVD;;AAYAF,SAAS,CAACU,SAAV,GAAsB;AAKpBP,EAAAA,KAAK,EAAEQ,aALa;AAUpBP,EAAAA,UAAU,EAAEQ,sBAAUC,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CAAhB,CAVQ;AAcpBR,EAAAA,SAAS,EAAEO,sBAAUC,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,OAAnB,EAA4B,SAA5B,CAAhB,CAdS;AAkBpBN,EAAAA,SAAS,EAAEK,sBAAUC,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,EAAoB,KAApB,EAA2B,UAA3B,CAAhB;AAlBS,CAAtB;AAsBAb,SAAS,CAACc,YAAV,GAAyB;AACvBX,EAAAA,KAAK,EAAE,SADgB;AAEvBC,EAAAA,UAAU,EAAE,MAFW;AAGvBC,EAAAA,SAAS,EAAEU,SAHY;AAIvBR,EAAAA,SAAS,EAAE;AAJY,CAAzB;;eAOeS,kBAAMC,IAAN,CAAWjB,SAAX,C","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { Color } from '../../../shared';\n\nimport './paragraph.scss';\n\n/**\n * Beautiful-ui does not force the developer to use its own styles nor creates extra global rules that can possibly\n * collide with the application's ones.<br/>\n * For this reason, in order to possibly have the same style between UI components and texts when needed, few\n * typography specialised components has been created.<br/>\n * The typography specialised components are used within the library itself.\n * <br/>\n * Here's the Paragraph component.\n */\nconst Paragraph = (props) => {\n  const { children, color, fontFamily, textAlign, className, wordBreak, ...rest } = props;\n  const classList = classNames('bi bi-p', `bi-p-${color}`, `bi-ff-${fontFamily}`, {\n    [`bi-p-${textAlign}`]: !!textAlign,\n    [`bi-p-break-${wordBreak}`]: !!wordBreak,\n  }, className);\n\n  return (\n    <p className={classList} {...rest}>{children}</p>\n  );\n};\n\nParagraph.propTypes = {\n  /*\n   * Defines the paragraph color, can be one of the following:\n   * `default`, `primary`, `secondary`, `info`, `warning`, `success`, `danger`.\n   */\n  color: Color,\n  /*\n   * Defines the paragraph font-family, can be one of the following:\n   * `sans`, `serif`, `mono`.\n   */\n  fontFamily: PropTypes.oneOf(['sans', 'serif', 'mono']),\n  /**\n   * Defines the paragraph text align\n   */\n  textAlign: PropTypes.oneOf(['center', 'left', 'right', 'justify']),\n  /**\n   * Defines the paragraph breaks\n   */\n  wordBreak: PropTypes.oneOf(['normal', 'words', 'all', 'truncate']),\n};\n\n\nParagraph.defaultProps = {\n  color: 'default',\n  fontFamily: 'sans',\n  textAlign: undefined,\n  wordBreak: 'normal',\n};\n\nexport default React.memo(Paragraph);\n"],"file":"Paragraph.js"}