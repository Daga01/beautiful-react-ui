{"version":3,"sources":["../../../../src/components/Typography/Divider/Divider.js"],"names":["Divider","props","fancy","clear","light","line","className","children","rest","classes","propTypes","PropTypes","bool","oneOf","defaultProps","React","memo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;AAUA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AAAA,MACjBC,KADiB,GAC2CD,KAD3C,CACjBC,KADiB;AAAA,MACVC,KADU,GAC2CF,KAD3C,CACVE,KADU;AAAA,MACHC,KADG,GAC2CH,KAD3C,CACHG,KADG;AAAA,MACIC,IADJ,GAC2CJ,KAD3C,CACII,IADJ;AAAA,MACUC,SADV,GAC2CL,KAD3C,CACUK,SADV;AAAA,MACqBC,QADrB,GAC2CN,KAD3C,CACqBM,QADrB;AAAA,MACkCC,IADlC,4BAC2CP,KAD3C;;AAGzB,MAAMQ,OAAO,GAAG,4BAAW,eAAX,EAA4B;AAC1C,wBAAoBP,KADsB;AAE1C,2BAAuB,CAACK,QAFkB;AAG1C,uBAAmB,CAAC,CAACA,QAHqB;AAI1C,2BAAuBJ,KAJmB;AAK1C,wBAAoBC,KALsB;AAM1C,yBAAqBC,IAAI,KAAK,QANY;AAO1C,yBAAqBA,IAAI,KAAK;AAPY,GAA5B,EAQbC,SARa,CAAhB;AAUA,SAAQ;AAAK,IAAA,SAAS,EAAEG;AAAhB,KAA6BD,IAA7B,GAAmC,8CAAOD,QAAP,CAAnC,CAAR;AACD,CAdD;;AAiBAP,OAAO,CAACU,SAAR,GAAoB;AAIlBR,EAAAA,KAAK,EAAES,sBAAUC,IAJC;AAQlBT,EAAAA,KAAK,EAAEQ,sBAAUC,IARC;AAYlBR,EAAAA,KAAK,EAAEO,sBAAUC,IAZC;AAgBlBP,EAAAA,IAAI,EAAEM,sBAAUE,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,QAApB,CAAhB;AAhBY,CAApB;AAmBAb,OAAO,CAACc,YAAR,GAAuB;AACrBZ,EAAAA,KAAK,EAAE,KADc;AAErBC,EAAAA,KAAK,EAAE,IAFc;AAGrBC,EAAAA,KAAK,EAAE,KAHc;AAIrBC,EAAAA,IAAI,EAAE;AAJe,CAAvB;;eAOeU,kBAAMC,IAAN,CAAWhB,OAAX,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './divider.scss';\n\n/**\n * A Divider component is generally used to divide some parts of the page\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Divider = (props) => {\n  const { fancy, clear, light, line, className, children, ...rest } = props;\n\n  const classes = classNames('bi bi-divider', {\n    'bi-divider-fancy': fancy,\n    'bi-divider-linelong': !children,\n    'bi-divider-text': !!children,\n    'bi-divider-clearfix': clear,\n    'bi-divider-light': light,\n    'bi-divider-dashed': line === 'dashed',\n    'bi-divider-dotted': line === 'dotted',\n  }, className);\n\n  return (<div className={classes} {...rest}><span>{children}</span></div>);\n};\n\n\nDivider.propTypes = {\n  /**\n   * shows 2 lines instead of one\n   */\n  fancy: PropTypes.bool,\n  /**\n   * clears the content both left and right\n   */\n  clear: PropTypes.bool,\n  /**\n   * changes the line color from dark (default) to light\n   */\n  light: PropTypes.bool,\n  /**\n   * changes the line style\n   */\n  line: PropTypes.oneOf(['solid', 'dashed', 'dotted']),\n};\n\nDivider.defaultProps = {\n  fancy: false,\n  clear: true,\n  light: false,\n  line: 'solid',\n};\n\nexport default React.memo(Divider);\n"],"file":"Divider.js"}