{"version":3,"sources":["components/Enterprise/Diagram/NodesCanvas/NodesCanvas.js"],"names":["NodesCanvas","props","nodes","onPortRegister","onNodeRegister","onDragNewSegment","onSegmentFail","onSegmentConnect","onChange","onNodePositionChange","nodeId","newCoordinates","nextNodes","length","map","node","id","propTypes","PropTypes","arrayOf","NodeType","func","defaultProps","undefined","React","memo","isEqual"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAKA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA,MACrBC,KADqB,GACkFD,KADlF,CACrBC,KADqB;AAAA,MACdC,cADc,GACkFF,KADlF,CACdE,cADc;AAAA,MACEC,cADF,GACkFH,KADlF,CACEG,cADF;AAAA,MACkBC,gBADlB,GACkFJ,KADlF,CACkBI,gBADlB;AAAA,MACoCC,aADpC,GACkFL,KADlF,CACoCK,aADpC;AAAA,MACmDC,gBADnD,GACkFN,KADlF,CACmDM,gBADnD;AAAA,MACqEC,QADrE,GACkFP,KADlF,CACqEO,QADrE;AAI7B,MAAMC,oBAAoB,GAAG,wBAAY,UAACC,MAAD,EAASC,cAAT,EAA4B;AACnE,QAAIH,QAAJ,EAAc;AACZ,UAAMI,SAAS,GAAG,uCAAsBF,MAAtB,EAA8BC,cAA9B,EAA8CT,KAA9C,CAAlB;AACAM,MAAAA,QAAQ,CAACI,SAAD,CAAR;AACD;AACF,GAL4B,EAK1B,CAACV,KAAD,EAAQM,QAAR,CAL0B,CAA7B;AAOA,SAAON,KAAK,IAAIA,KAAK,CAACW,MAAN,GAAe,CAAxB,IAA6BX,KAAK,CAACY,GAAN,CAAU,UAACC,IAAD;AAAA,WAC5C,gCAAC,uBAAD,eACMA,IADN;AAEE,MAAA,gBAAgB,EAAEN,oBAFpB;AAGE,MAAA,cAAc,EAAEN,cAHlB;AAIE,MAAA,gBAAgB,EAAEE,gBAJpB;AAKE,MAAA,aAAa,EAAEC,aALjB;AAME,MAAA,gBAAgB,EAAEC,gBANpB;AAOE,MAAA,OAAO,EAAEH,cAPX;AAQE,MAAA,GAAG,EAAEW,IAAI,CAACC;AARZ,OAD4C;AAAA,GAAV,CAApC;AAYD,CAvBD;;AAyBAhB,WAAW,CAACiB,SAAZ,GAAwB;AACtBf,EAAAA,KAAK,EAAEgB,sBAAUC,OAAV,CAAkBC,eAAlB,CADe;AAEtBZ,EAAAA,QAAQ,EAAEU,sBAAUG,IAFE;AAGtBjB,EAAAA,cAAc,EAAEc,sBAAUG,IAHJ;AAItBlB,EAAAA,cAAc,EAAEe,sBAAUG,IAJJ;AAKtBhB,EAAAA,gBAAgB,EAAEa,sBAAUG,IALN;AAMtBf,EAAAA,aAAa,EAAEY,sBAAUG,IANH;AAOtBd,EAAAA,gBAAgB,EAAEW,sBAAUG;AAPN,CAAxB;AAUArB,WAAW,CAACsB,YAAZ,GAA2B;AACzBpB,EAAAA,KAAK,EAAE,EADkB;AAEzBM,EAAAA,QAAQ,EAAEe,SAFe;AAGzBnB,EAAAA,cAAc,EAAEmB,SAHS;AAIzBpB,EAAAA,cAAc,EAAEoB,SAJS;AAKzBlB,EAAAA,gBAAgB,EAAEkB,SALO;AAMzBjB,EAAAA,aAAa,EAAEiB,SANU;AAOzBhB,EAAAA,gBAAgB,EAAEgB;AAPO,CAA3B;;eAUeC,kBAAMC,IAAN,CAAWzB,WAAX,EAAwB0B,mBAAxB,C","sourcesContent":["import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash/isEqual';\nimport { NodeType } from '../utils/Types';\nimport DiagramNode from '../DiagramNode/DiagramNode';\nimport updateNodeCoordinates from './updateNodeCoordinates';\n\n/**\n * Handles the nodes' events and business logic\n */\nconst NodesCanvas = (props) => {\n  const { nodes, onPortRegister, onNodeRegister, onDragNewSegment, onSegmentFail, onSegmentConnect, onChange } = props;\n\n  // when a node item update its position updates it within the nodes array\n  const onNodePositionChange = useCallback((nodeId, newCoordinates) => {\n    if (onChange) {\n      const nextNodes = updateNodeCoordinates(nodeId, newCoordinates, nodes);\n      onChange(nextNodes);\n    }\n  }, [nodes, onChange]);\n\n  return nodes && nodes.length > 0 && nodes.map((node) => (\n    <DiagramNode\n      {...node}\n      onPositionChange={onNodePositionChange}\n      onPortRegister={onPortRegister}\n      onDragNewSegment={onDragNewSegment}\n      onSegmentFail={onSegmentFail}\n      onSegmentConnect={onSegmentConnect}\n      onMount={onNodeRegister}\n      key={node.id}\n    />\n  ));\n};\n\nNodesCanvas.propTypes = {\n  nodes: PropTypes.arrayOf(NodeType),\n  onChange: PropTypes.func,\n  onNodeRegister: PropTypes.func,\n  onPortRegister: PropTypes.func,\n  onDragNewSegment: PropTypes.func,\n  onSegmentFail: PropTypes.func,\n  onSegmentConnect: PropTypes.func,\n};\n\nNodesCanvas.defaultProps = {\n  nodes: [],\n  onChange: undefined,\n  onNodeRegister: undefined,\n  onPortRegister: undefined,\n  onDragNewSegment: undefined,\n  onSegmentFail: undefined,\n  onSegmentConnect: undefined,\n};\n\nexport default React.memo(NodesCanvas, isEqual);\n"],"file":"NodesCanvas.js"}