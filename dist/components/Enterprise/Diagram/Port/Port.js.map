{"version":3,"sources":["components/Enterprise/Diagram/Port/Port.js"],"names":["Port","props","id","canLink","alignment","onDragNewSegment","onSegmentFail","onSegmentConnect","onMount","rest","canvas","ref","onDrag","onDragEnd","event","info","stopImmediatePropagation","stopPropagation","from","start","x","y","to","clientX","clientY","targetPort","target","getAttribute","current","propTypes","PropTypes","oneOfType","string","symbol","isRequired","func","oneOf","defaultProps","undefined","React","memo"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDrag } from '../../../../shared';\nimport useCanvas from '../utils/useCanvas';\nimport getRelativePoint from '../utils/getRelativePoint';\n\n/**\n * Port\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Port = (props) => {\n  const { id, canLink, alignment, onDragNewSegment, onSegmentFail, onSegmentConnect, onMount, ...rest } = props;\n  const canvas = useCanvas();\n  const { ref, onDrag, onDragEnd } = useDrag();\n\n  onDrag((event, info) => {\n    if (onDragNewSegment) {\n      event.stopImmediatePropagation();\n      event.stopPropagation();\n      const from = getRelativePoint(info.start, [canvas.x, canvas.y]);\n      const to = getRelativePoint([event.clientX, event.clientY], [canvas.x, canvas.y]);\n\n      onDragNewSegment(id, from, to, alignment);\n    }\n  });\n\n  onDragEnd((event) => {\n    const targetPort = event.target.getAttribute('data-port-id');\n    /* eslint-disable no-unused-expressions */\n    if (targetPort && event.target !== ref.current && canLink(id, targetPort)) {\n      onSegmentConnect && onSegmentConnect(id, targetPort);\n    } else {\n      onSegmentConnect && onSegmentFail(id);\n    }\n    /* eslint-enable no-unused-expressions */\n  });\n\n  useEffect(() => {\n    if (ref.current && onMount) {\n      onMount(id, ref.current);\n    }\n  }, [ref.current]);\n\n  return (<div className=\"bi bi-diagram-port\" data-port-id={id} ref={ref} {...rest} />);\n};\n\nPort.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.symbol]).isRequired,\n  onDragNewSegment: PropTypes.func,\n  onSegmentFail: PropTypes.func,\n  onSegmentConnect: PropTypes.func,\n  canLink: PropTypes.func,\n  onMount: PropTypes.func,\n  alignment: PropTypes.oneOf(['right', 'left', 'top', 'bottom']),\n};\n\nPort.defaultProps = {\n  onDragNewSegment: undefined,\n  onSegmentFail: undefined,\n  onSegmentConnect: undefined,\n  canLink: () => true,\n  onMount: undefined,\n  alignment: undefined,\n};\n\nexport default React.memo(Port);\n"],"file":"Port.js"}