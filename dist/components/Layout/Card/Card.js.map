{"version":3,"sources":["../../../../src/components/Layout/Card/Card.js"],"names":["Card","React","memo","props","children","textAlign","fluid","orientation","actionButton","actionButtonIcon","onActionButtonClick","reversed","float","actionButtonRenderer","imageRenderer","className","rest","cardImage","childrenWithoutImg","PossibleImageWrapper","possibleImageWrapperProps","classList","propTypes","PropTypes","oneOf","bool","oneOfType","instanceOf","Icon","func","defaultProps","undefined","Title","CardTitle","Content","CardContent","Image","CardImage","Footer","CardFooter"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;AAgBA,IAAMA,IAAI,GAAGC,kBAAMC,IAAN,CAAW,UAACC,KAAD,EAAW;AAAA;;AAAA,MAE/BC,QAF+B,GAI7BD,KAJ6B,CAE/BC,QAF+B;AAAA,MAErBC,SAFqB,GAI7BF,KAJ6B,CAErBE,SAFqB;AAAA,MAEVC,KAFU,GAI7BH,KAJ6B,CAEVG,KAFU;AAAA,MAEHC,WAFG,GAI7BJ,KAJ6B,CAEHI,WAFG;AAAA,MAEUC,YAFV,GAI7BL,KAJ6B,CAEUK,YAFV;AAAA,MAEwBC,gBAFxB,GAI7BN,KAJ6B,CAEwBM,gBAFxB;AAAA,MAE0CC,mBAF1C,GAI7BP,KAJ6B,CAE0CO,mBAF1C;AAAA,MAE+DC,QAF/D,GAI7BR,KAJ6B,CAE+DQ,QAF/D;AAAA,MAEyEC,MAFzE,GAI7BT,KAJ6B;AAAA,MAG/BU,oBAH+B,GAI7BV,KAJ6B,CAG/BU,oBAH+B;AAAA,MAGTC,aAHS,GAI7BX,KAJ6B,CAGTW,aAHS;AAAA,MAGMC,SAHN,GAI7BZ,KAJ6B,CAGMY,SAHN;AAAA,MAGoBC,IAHpB,4BAI7Bb,KAJ6B;;AAAA,8BAMO,4CAA2BC,QAA3B,CANP;AAAA;AAAA,MAM1Ba,SAN0B;AAAA,MAMfC,kBANe;;AAAA,8BAOyB,yCAAwBP,QAAxB,EAAkCJ,WAAlC,CAPzB;AAAA;AAAA,MAO1BY,oBAP0B;AAAA,MAOJC,yBAPI;;AASjC,MAAMC,SAAS,GAAG,4BAAW,YAAX,uEACDhB,SADC,GACa,CAAC,CAACA,SADf,gCAEhB,eAFgB,EAECE,WAAW,KAAK,YAFjB,yCAGT,CAAC,CAACD,KAHO,4CAIhBK,QAJgB,yCAKhBC,MALgB,iBAMfG,SANe,CAAlB;AAQA,SACE;AAAK,IAAA,SAAS,EAAEM;AAAhB,KAA+BL,IAA/B,GACG,CAACC,SAAS,IAAIT,YAAb,IAA6BM,aAA9B,KACC,gCAAC,oBAAD,EAA0BM,yBAA1B,EACGZ,YAAY,IACX;AAAK,IAAA,SAAS,EAAE,4BAAW;AAAE,4BAAsB,CAAC,CAACA,YAA1B;AAAwC,gBAAU,CAACS;AAAnD,KAAX;AAAhB,KAEGT,YAAY,IAAIK,oBAAhB,IAAwCA,oBAAoB,EAF/D,EAGGL,YAAY,IAAI,CAACK,oBAAjB,IACC,gCAAC,kBAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,IAAI,EAAE,gCAAC,gBAAD;AAAM,MAAA,IAAI,EAAEJ;AAAZ,MAFR;AAGE,IAAA,OAAO,EAAEC,mBAHX;AAIE,IAAA,SAAS,EAAC,UAJZ;AAKE,IAAA,OAAO;AALT,IAJJ,CAFJ,EAgBGO,SAAS,IAAI,CAACH,aAAd,IAAgCG,SAhBnC,EAiBGH,aAAa,IAAIA,aAAa,EAjBjC,CAFJ,EAsBE;AAAK,IAAA,SAAS,EAAC;AAAf,KAAuCI,kBAAvC,CAtBF,CADF;AA0BD,CA3CY,CAAb;;AA6CAlB,IAAI,CAACsB,SAAL,GAAiB;AAIfjB,EAAAA,SAAS,EAAEkB,sBAAUC,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,OAAnB,EAA4B,SAA5B,CAAhB,CAJI;AAQflB,EAAAA,KAAK,EAAEiB,sBAAUE,IARF;AAYflB,EAAAA,WAAW,EAAEgB,sBAAUC,KAAV,CAAgB,CAAC,YAAD,EAAe,UAAf,CAAhB,CAZE;AAgBfhB,EAAAA,YAAY,EAAEe,sBAAUE,IAhBT;AAoBfhB,EAAAA,gBAAgB,EAAEc,sBAAUG,SAAV,CAAoB,CAACH,sBAAUI,UAAV,CAAqBC,gBAArB,CAAD,EAA6B,QAA7B,CAApB,CApBH;AAwBflB,EAAAA,mBAAmB,EAAEa,sBAAUM,IAxBhB;AA4BflB,EAAAA,QAAQ,EAAEY,sBAAUE,IA5BL;AAgCf,WAAOF,sBAAUE,IAhCF;AAoCfZ,EAAAA,oBAAoB,EAAEU,sBAAUM,IApCjB;AAwCff,EAAAA,aAAa,EAAES,sBAAUM;AAxCV,CAAjB;AA2CA7B,IAAI,CAAC8B,YAAL,GAAoB;AAClBzB,EAAAA,SAAS,EAAE0B,SADO;AAElBzB,EAAAA,KAAK,EAAE,KAFW;AAGlBC,EAAAA,WAAW,EAAE,UAHK;AAIlBC,EAAAA,YAAY,EAAE,KAJI;AAKlBC,EAAAA,gBAAgB,EAAE,YALA;AAMlBC,EAAAA,mBAAmB,EAAEqB,SANH;AAOlBpB,EAAAA,QAAQ,EAAE,KAPQ;AAQlB,WAAO,KARW;AASlBE,EAAAA,oBAAoB,EAAEkB,SATJ;AAUlBjB,EAAAA,aAAa,EAAEiB;AAVG,CAApB;AAcA/B,IAAI,CAACgC,KAAL,GAAaC,qBAAb;AACAjC,IAAI,CAACkC,OAAL,GAAeC,uBAAf;AACAnC,IAAI,CAACoC,KAAL,GAAaC,qBAAb;AACArC,IAAI,CAACsC,MAAL,GAAcC,sBAAd;eAEevC,I","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Icon from '../../Elements/Icon';\nimport Button from '../../Elements/Button';\nimport CardTitle from './CardTitle';\nimport CardContent from './CardContent';\nimport CardImage from './CardImage';\nimport CardFooter from './CardFooter';\nimport takeCardImageOutOfChildren from './utils/takeCardImageOutOfChildren';\nimport getPossibleImageWrapper from './utils/getPossibleImageWrapper';\n\nimport './card.scss';\n\n\n/**\n * The Card component displays its content in a manner similar to a playing card.\n * It could possibly be composed by `Card.Title`, `Card.Content`, `Card.Image` and eventually `Card.Footer`.\n * The `Card.Image` component will be shown at the top of the card, if the card is vertically aligned.\n * Or on the left if it's horizontally aligned.\n * To change this behavior, you can possibly use `reversed` prop.\n *\n * Warning: the `Card.Image` component will never be shown in the middle of the card.\n *\n */\n// the React.memo has been used here rather than on the export line like other cases, to avoid wrapping the shortcut.\nconst Card = React.memo((props) => {\n  const {\n    children, textAlign, fluid, orientation, actionButton, actionButtonIcon, onActionButtonClick, reversed, float,\n    actionButtonRenderer, imageRenderer, className, ...rest\n  } = props;\n\n  const [cardImage, childrenWithoutImg] = takeCardImageOutOfChildren(children);\n  const [PossibleImageWrapper, possibleImageWrapperProps] = getPossibleImageWrapper(reversed, orientation);\n\n  const classList = classNames('bi bi-card', {\n    [`text-align-${textAlign}`]: !!textAlign,\n    'orientation-h': orientation === 'horizontal',\n    fluid: !!fluid,\n    reversed,\n    float,\n  }, className);\n\n  return (\n    <div className={classList} {...rest}>\n      {(cardImage || actionButton || imageRenderer) && (\n        <PossibleImageWrapper {...possibleImageWrapperProps}>\n          {actionButton && (\n            <div className={classNames({ 'bi-card-actbtn-icn': !!actionButton, 'no-img': !cardImage })}>\n              { /* the actionButtonRenderer overrides the standard action button behaviour */}\n              {actionButton && actionButtonRenderer && actionButtonRenderer()}\n              {actionButton && !actionButtonRenderer && (\n                <Button\n                  color=\"transparent\"\n                  icon={<Icon name={actionButtonIcon} />}\n                  onClick={onActionButtonClick}\n                  className=\"btn-dots\"\n                  rounded\n                />\n              )}\n            </div>\n          )}\n          {cardImage && !imageRenderer && (cardImage)}\n          {imageRenderer && imageRenderer()}\n        </PossibleImageWrapper>\n      )}\n      <div className=\"card-content-wrapper\">{childrenWithoutImg}</div>\n    </div>\n  );\n});\n\nCard.propTypes = {\n  /**\n   * Allows to align card text content\n   */\n  textAlign: PropTypes.oneOf(['center', 'left', 'right', 'justify']),\n  /**\n   * Defines if the card should adapt its width to its container or not\n   */\n  fluid: PropTypes.bool,\n  /**\n   * Defines the card orientation\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * If true, it shows an actionButton that will run a callback\n   */\n  actionButton: PropTypes.bool,\n  /**\n   * Allows to change actionButton's icon\n   */\n  actionButtonIcon: PropTypes.oneOfType([PropTypes.instanceOf(Icon), 'string']),\n  /**\n   * The callback to be performed on action button click\n   */\n  onActionButtonClick: PropTypes.func,\n  /**\n   * Defines weather the card should reverse its column or not\n   */\n  reversed: PropTypes.bool,\n  /**\n   * Defines weather the card should float on mouse hover or not\n   */\n  float: PropTypes.bool,\n  /**\n   * Allows to change the standard action button behaviour by defining a custom renderer\n   */\n  actionButtonRenderer: PropTypes.func,\n  /**\n   * Allows to change the standard card's image behaviour by defining a custom renderer\n   */\n  imageRenderer: PropTypes.func,\n};\n\nCard.defaultProps = {\n  textAlign: undefined,\n  fluid: false,\n  orientation: 'vertical',\n  actionButton: false,\n  actionButtonIcon: 'ellipsis-v',\n  onActionButtonClick: undefined,\n  reversed: false,\n  float: false,\n  actionButtonRenderer: undefined,\n  imageRenderer: undefined,\n};\n\n// shortcuts\nCard.Title = CardTitle;\nCard.Content = CardContent;\nCard.Image = CardImage;\nCard.Footer = CardFooter;\n\nexport default Card;\n"],"file":"Card.js"}